{"version":3,"file":"splide.js","sources":["../../src/js/constants/project.ts","../../src/js/constants/states.ts","../../src/js/utils/array/empty/empty.ts","../../src/js/utils/type/type.ts","../../src/js/utils/array/toArray/toArray.ts","../../src/js/utils/array/forEach/forEach.ts","../../src/js/utils/array/includes/includes.ts","../../src/js/utils/array/push/push.ts","../../src/js/utils/array/index.ts","../../src/js/utils/arrayLike/slice/slice.ts","../../src/js/utils/arrayLike/find/find.ts","../../src/js/utils/dom/toggleClass/toggleClass.ts","../../src/js/utils/dom/addClass/addClass.ts","../../src/js/utils/dom/append/append.ts","../../src/js/utils/dom/before/before.ts","../../src/js/utils/dom/matches/matches.ts","../../src/js/utils/dom/children/children.ts","../../src/js/utils/dom/child/child.ts","../../src/js/utils/object/forOwn/forOwn.ts","../../src/js/utils/object/assign/assign.ts","../../src/js/utils/object/merge/merge.ts","../../src/js/utils/dom/removeAttribute/removeAttribute.ts","../../src/js/utils/dom/setAttribute/setAttribute.ts","../../src/js/utils/dom/create/create.ts","../../src/js/utils/dom/style/style.ts","../../src/js/utils/dom/display/display.ts","../../src/js/utils/dom/getAttribute/getAttribute.ts","../../src/js/utils/dom/hasClass/hasClass.ts","../../src/js/utils/dom/parseHtml/parseHtml.ts","../../src/js/utils/dom/prevent/prevent.ts","../../src/js/utils/dom/query/query.ts","../../src/js/utils/dom/queryAll/queryAll.ts","../../src/js/utils/dom/rect/rect.ts","../../src/js/utils/dom/remove/remove.ts","../../src/js/utils/dom/removeClass/removeClass.ts","../../src/js/utils/dom/unit/unit.ts","../../src/js/utils/error/assert/assert.ts","../../src/js/utils/function/nextTick/nextTick.ts","../../src/js/utils/function/noop/noop.ts","../../src/js/utils/function/raf/raf.ts","../../src/js/utils/math/between/between.ts","../../src/js/utils/math/clamp/clamp.ts","../../src/js/utils/math/sign/sign.ts","../../src/js/utils/math/index.ts","../../src/js/components/Options/Options.ts","../../src/js/constants/directions.ts","../../src/js/components/Direction/Direction.ts","../../src/js/constants/classes.ts","../../src/js/constants/events.ts","../../src/js/constructors/EventBus/EventBus.ts","../../src/js/constructors/EventInterface/EventInterface.ts","../../src/js/constructors/RequestInterval/RequestInterval.ts","../../src/js/constructors/State/State.ts","../../src/js/constructors/Throttle/Throttle.ts","../../src/js/utils/string/format/format.ts","../../src/js/utils/string/pad/pad.ts","../../src/js/utils/string/uniqueId/uniqueId.ts","../../src/js/components/Elements/Elements.ts","../../src/js/components/Style/Style.ts","../../src/js/constants/attributes.ts","../../src/js/constants/types.ts","../../src/js/components/Slides/Slide.ts","../../src/js/components/Slides/Slides.ts","../../src/js/components/Clones/Clones.ts","../../src/js/components/Layout/Layout.ts","../../src/js/components/Move/Move.ts","../../src/js/components/Controller/Controller.ts","../../src/js/components/Arrows/path.ts","../../src/js/components/Arrows/Arrows.ts","../../src/js/components/Autoplay/Autoplay.ts","../../src/js/components/Cover/Cover.ts","../../src/js/components/Scroll/constants.ts","../../src/js/components/Scroll/Scroll.ts","../../src/js/components/Drag/constants.ts","../../src/js/components/Drag/Drag.ts","../../src/js/components/Keyboard/Keyboard.ts","../../src/js/components/LazyLoad/constants.ts","../../src/js/components/LazyLoad/LazyLoad.ts","../../src/js/components/Pagination/Pagination.ts","../../src/js/components/Sync/Sync.ts","../../src/js/components/Wheel/Wheel.ts","../../src/js/constants/i18n.ts","../../src/js/constants/defaults.ts","../../src/js/transitions/Fade/Fade.ts","../../src/js/transitions/Slide/Slide.ts","../../src/js/core/Splide/Splide.ts"],"sourcesContent":["/**\n * The project code.\n *\n * @since 3.0.0\n */\nexport const PROJECT_CODE = 'splide';\n\n/**\n * The data attribute prefix.\n *\n * @since 3.0.0\n */\nexport const DATA_ATTRIBUTE = `data-${ PROJECT_CODE }`;\n","/**\n * Splide has been just created.\n */\nexport const CREATED = 1;\n\n/**\n * Splide has mounted components.\n */\nexport const MOUNTED = 2;\n\n/**\n * Splide is ready.\n */\nexport const IDLE = 3;\n\n/**\n * Splide is moving.\n */\nexport const MOVING = 4;\n\n/**\n * Splide has been destroyed.\n */\nexport const DESTROYED = 5;\n\n/**\n * The collection of all states.\n *\n * @since 3.0.0\n */\nexport const STATES = {\n  CREATED,\n  MOUNTED,\n  IDLE,\n  MOVING,\n  DESTROYED,\n};\n","/**\n * Empties the array.\n *\n * @param array - A array to empty.\n */\nexport function empty( array: any[] ): void {\n  array.length = 0;\n}\n","/**\n * Checks if the given subject is an object or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is an object, or otherwise `false`.\n */\nexport function isObject( subject: unknown ): subject is object {\n  return ! isNull( subject ) && typeof subject === 'object';\n}\n\n/**\n * Checks if the given subject is an array or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is an array, or otherwise `false`.\n */\nexport function isArray<T>( subject: unknown ): subject is T[] {\n  return Array.isArray( subject );\n}\n\n/**\n * Checks if the given subject is a function or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is a function, or otherwise `false`.\n */\nexport function isFunction( subject: unknown ): subject is ( ...args: any[] ) => any {\n  return typeof subject === 'function';\n}\n\n/**\n * Checks if the given subject is a string or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is a string, or otherwise `false`.\n */\nexport function isString( subject: unknown ): subject is string {\n  return typeof subject === 'string';\n}\n\n/**\n * Checks if the given subject is `undefined` or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is `undefined`, or otherwise `false`.\n */\nexport function isUndefined( subject: unknown ): subject is undefined {\n  return typeof subject === 'undefined';\n}\n\n/**\n * Checks if the given subject is `null` or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is `null`, or otherwise `false`.\n */\nexport function isNull( subject: unknown ): subject is null {\n  return subject === null;\n}\n\n/**\n * Checks if the given subject is an HTMLElement or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is an HTMLElement instance, or otherwise `false`.\n */\nexport function isHTMLElement( subject: unknown ): subject is HTMLElement {\n  return subject instanceof HTMLElement;\n}\n\n/**\n * Checks if the given subject is an HTMLButtonElement or not.\n *\n * @param subject - A subject to check.\n *\n * @return `true` if the subject is an HTMLButtonElement, or otherwise `false`.\n */\nexport function isHTMLButtonElement( subject: unknown ): subject is HTMLButtonElement {\n  return subject instanceof HTMLButtonElement;\n}\n","import { isArray } from '../../type/type';\n\n\n/**\n * Push the provided value to an array if the value is not an array.\n *\n * @param value - A value to push.\n *\n * @return An array containing the value, or the value itself if it is already an array.\n */\nexport function toArray<T>( value: T | T[] ): T[] {\n  return isArray( value ) ? value : [ value ];\n}\n","import { toArray } from '../toArray/toArray';\n\n\n/**\n * The extended `Array#forEach` method that accepts a single value as an argument.\n *\n * @param values   - A value or values to iterate over.\n * @param iteratee - An iteratee function.\n */\nexport function forEach<T>( values: T | T[], iteratee: ( value: T, index: number, array: T[] ) => void ): void {\n  toArray( values ).forEach( iteratee );\n}\n","/**\n * Checks if the array includes the value or not.\n * `Array#includes` is not supported by IE.\n *\n * @param array - An array.\n * @param value - A value to search for.\n *\n * @return `true` if the array includes the value, or otherwise `false`.\n */\nexport function includes<T>( array: T[], value: T ): boolean {\n  return array.indexOf( value ) > -1;\n}\n","import { toArray } from '../toArray/toArray';\n\n\n/**\n * Extended `Array#push()` that accepts an item or an array with items.\n *\n * @param array - An array to push items.\n * @param items - An item or items to push.\n *\n * @return A provided array itself.\n */\nexport function push<T>( array: T[], items: T | T[] ): T[] {\n  array.push( ...toArray( items ) );\n  return array;\n}\n","export { empty }    from './empty/empty';\nexport { forEach }  from './forEach/forEach';\nexport { includes } from './includes/includes';\nexport { push }     from './push/push';\nexport { toArray }  from './toArray/toArray';\n\nexport const arrayProto = Array.prototype;\n","import { arrayProto } from '../../array';\r\n\r\n\r\n/**\r\n * The slice method for an array-like object.\r\n *\r\n * @param arrayLike - An array-like object.\r\n * @param start     - Optional. A start index.\r\n * @param end       - Optional. A end index.\r\n *\r\n * @return An array with sliced elements.\r\n */\r\nexport function slice<T>( arrayLike: ArrayLike<T>, start?: number, end?: number ): T[] {\r\n  return arrayProto.slice.call( arrayLike, start, end );\r\n}\r\n","import { slice } from '../slice/slice';\n\n\n/**\n * The find method for an array or array-like object, works in IE.\n * This method is not performant for a huge array.\n *\n * @param arrayLike - An array-like object.\n * @param predicate - The predicate function to test each element in the object.\n *\n * @return A found value if available, or otherwise `undefined`.\n */\nexport function find<T>(\n  arrayLike: ArrayLike<T>,\n  predicate: ( value: T, index: number, array: T[] ) => any\n): T | undefined {\n  return slice( arrayLike ).filter( predicate )[ 0 ];\n}\n","import { forEach } from '../../array';\n\n\n/**\n * Toggles the provided class or classes by following the `add` boolean.\n *\n * @param elm     - An element whose classes are toggled.\n * @param classes - A class or class names.\n * @param add     - Whether to add or remove a class.\n */\nexport function toggleClass( elm: Element, classes: string | string[], add: boolean ): void {\n  if ( elm ) {\n    forEach( classes, name => {\n      if ( name ) {\n        elm.classList[ add ? 'add' : 'remove' ]( name );\n      }\n    } );\n  }\n}\n","import { toggleClass } from '../toggleClass/toggleClass';\n\n\n/**\n * Adds classes to the element.\n *\n * @param elm     - An element to add classes to.\n * @param classes - Classes to add.\n */\nexport function addClass( elm: Element, classes: string | string[] ): void {\n  toggleClass( elm, classes, true );\n}\n","import { forEach } from '../../array';\n\n\n/**\n * Appends children to the parent element.\n *\n * @param parent   - A parent element.\n * @param children - A child or children to append to the parent.\n */\nexport function append( parent: Element, children: Node | Node[] ): void {\n  forEach( children, parent.appendChild.bind( parent ) );\n}\n","import { forEach } from '../../array';\n\n\n/**\n * Inserts a node or nodes before the specified reference node.\n *\n * @param nodes - A node or nodes to insert.\n * @param ref   - A reference node.\n */\nexport function before( nodes: Node | Node[], ref: Node ): void {\n  forEach( nodes, node => {\n    const parent = ref.parentNode;\n\n    if ( parent ) {\n      parent.insertBefore( node, ref );\n    }\n  } );\n}\n","/**\n * Checks if the element can be selected by the provided selector or not.\n *\n * @param elm      - An element to check.\n * @param selector - A selector to test.\n *\n * @return `true` if the selector matches the element, or otherwise `false`.\n */\nexport function matches( elm: Element, selector: string ): boolean {\n  return ( elm[ 'msMatchesSelector' ] || elm.matches ).call( elm, selector );\n}\n","import { slice } from '../../arrayLike';\nimport { matches } from '../matches/matches';\n\n\n/**\n * Finds children that has the specified tag or class name.\n *\n * @param parent   - A parent element.\n * @param selector - A selector to filter children.\n *\n * @return An array with filtered children.\n */\nexport function children<E extends HTMLElement>( parent: HTMLElement, selector: string ): E[] {\n  return parent ? slice( parent.children ).filter( child => matches( child, selector ) ) as E[] : [];\n}\n","import { children } from '../children/children';\n\n\n/**\n * Returns a child element that matches the specified tag or class name.\n *\n * @param parent   - A parent element.\n * @param selector - A selector to filter children.\n *\n * @return A matched child element if available, or otherwise `undefined`.\n */\nexport function child<E extends HTMLElement>( parent: HTMLElement, selector?: string ): E | undefined {\n  return selector ? children<E>( parent, selector )[ 0 ] : parent.firstElementChild as E;\n}\n","/**\n * Iterates over the provided object by own enumerable keys with calling the iteratee function.\n *\n * @param object   - An object to iterate over.\n * @param iteratee - An iteratee function that takes the value and key as arguments.\n *\n * @return A provided object itself.\n */\nexport function forOwn<T extends object>(\n  object: T,\n  iteratee: ( value: T[ keyof T ], key: string ) => boolean | void\n): T {\n  if ( object ) {\n    const keys = Object.keys( object );\n\n    for ( let i = 0; i < keys.length; i++ ) {\n      const key = keys[ i ];\n\n      if ( key !== '__proto__' ) {\n        if ( iteratee( object[ key ], key ) === false ) {\n          break;\n        }\n      }\n    }\n  }\n\n  return object;\n}\n","import { forOwn } from '../forOwn/forOwn';\n\n\n/**\n * Assign U to T.\n *\n * @typeParam T - An object to assign to.\n * @typeParam U - An object to assign.\n *\n * @return An assigned object type.\n */\nexport type Assign<T, U> = Omit<T, keyof U> & U;\n\nexport function assign<T extends object>( object: T ): T;\n\n// There is a way to type arguments recursively, but these fixed definitions are enough for this project.\nexport function assign<T extends object, U extends object>( object: T, source: U ): Assign<T, U>;\n\nexport function assign<T extends object, U1 extends object, U2 extends object>(\n  object: T, source1: U1, source2: U2\n): Assign<Assign<T, U1>, U2>;\n\nexport function assign<T extends object, U1 extends object, U2 extends object, U3 extends object>(\n  object: T, source1: U1, source2: U2, source3: U3\n): Assign<Assign<Assign<T, U1>, U2>, U3>;\n\n/**\n * Assigns all own enumerable properties of all source objects to the provided object.\n * `undefined` in source objects will be skipped.\n *\n * @param object  - An object to assign properties to.\n * @param sources - Objects to assign properties from.\n *\n * @return An object assigned properties of the sources to.\n */\nexport function assign<T extends object, U extends object>( object: T, ...sources: U[] ): any {\n  sources.forEach( source => {\n    forOwn( source, ( value, key ) => {\n      object[ key ] = source[ key ];\n    } );\n  } );\n\n  return object;\n}\n","import { isObject } from '../../type/type';\nimport { forOwn } from '../forOwn/forOwn';\n\n\n/**\n * Merges U to T.\n *\n * @typeParam T - An object to merge to.\n * @typeParam U - An object to to.\n *\n * @return An merged object type.\n */\nexport type Merge<T extends object, U extends object> = Omit<T, keyof U> & {\n  [ K in ( keyof T & keyof U ) ]: U[ K ] extends object\n    ? U[ K ] extends any[]\n      ? T[ K ] extends any[]\n        ? Array<T[ K ][ number ] | U[ K ][ number ]>\n        : U[ K ]\n      : T[ K ] extends object\n        ? Merge<T[ K ], U[ K ]> extends infer A ? Cast<A, object> : never\n        : U[ K ]\n    : U[ K ];\n} & Omit<U, keyof T>;\n\ntype Cast<T, U> = T extends U ? T : U;\n\n/**\n * Recursively merges source properties to the object.\n *\n * @param object - An object to merge properties to.\n * @param source - A source object to merge properties from.\n *\n * @return A new object with merged properties.\n */\nexport function merge<T extends object, U extends object>( object: T, source: U ): Merge<T, U> {\n  forOwn( source, ( value, key ) => {\n    object[ key ] = isObject( value ) ? merge( isObject( object[ key ] ) ? object[ key ] : {}, value ) : value;\n  } );\n\n  return object as Merge<T, U>;\n}\n","import { forEach } from '../../array';\n\n\n/**\n * Removes attributes from the element.\n *\n * @param elm   - An element.\n * @param attrs - An attribute or attributes to remove.\n */\nexport function removeAttribute( elm: Element, attrs: string | string[] ): void {\n  if ( elm ) {\n    forEach( attrs, attr => {\n      elm.removeAttribute( attr );\n    } );\n  }\n}\n","import { forOwn } from '../../object';\nimport { isNull, isObject } from '../../type/type';\nimport { removeAttribute } from '../removeAttribute/removeAttribute';\n\n\nexport function setAttribute( elm: Element, attr: string, value: string | number | boolean ): void;\nexport function setAttribute( elm: Element, attrs: Record<string, string | number | boolean> ): void;\n\nexport function setAttribute(\n  elm: Element,\n  attrs: string | Record<string, string | number | boolean>,\n  value?: string | number | boolean\n): void {\n  if ( isObject( attrs ) ) {\n    forOwn( attrs, ( value, name ) => {\n      setAttribute( elm, name, value );\n    } );\n  } else {\n    isNull( value ) ? removeAttribute( elm, attrs ) : elm.setAttribute( attrs, String( value ) );\n  }\n}\n","import { isArray, isString } from '../../type/type';\nimport { addClass } from '../addClass/addClass';\nimport { append } from '../append/append';\nimport { setAttribute } from '../setAttribute/setAttribute';\n\n\n/**\n * Creates a HTML element.\n *\n * @param tag    - A tag name.\n * @param attrs  - Optional. An object with attributes to apply the created element to, or a string with classes.\n * @param parent - Optional. A parent element where the created element is appended.\n */\nexport function create<K extends keyof HTMLElementTagNameMap>(\n  tag: K,\n  attrs?: Record<string, string | number | boolean> | string | string[],\n  parent?: HTMLElement\n): HTMLElementTagNameMap[ K ] {\n  const elm = document.createElement( tag );\n\n  if ( attrs ) {\n    if ( isString( attrs ) || isArray( attrs ) ) {\n      addClass( elm, attrs );\n    } else {\n      setAttribute( elm, attrs );\n    }\n  }\n\n  if ( parent ) {\n    append( parent, elm );\n  }\n\n  return elm;\n}\n","import { forEach } from '../../array';\nimport { forOwn } from '../../object';\nimport { isArray, isNull, isString } from '../../type/type';\n\n\n/**\n * The union for CSS style properties, such as \"padding\", \"fontSize\", etc.\n *\n * @since 0.1.0\n */\nexport type CSSStyleProperties = Exclude<keyof CSSStyleDeclaration, number>;\n\nexport function style(\n  elms: HTMLElement | HTMLElement[],\n  styles: Record<string, string | number>\n): void;\n\nexport function style<K extends CSSStyleProperties>(\n  elms: HTMLElement,\n  styles: K\n): CSSStyleDeclaration[ K ];\n\nexport function style(\n  elms: HTMLElement,\n  styles: string\n): string;\n\n\n/**\n * Applies inline styles to the provided element by an object literal.\n *\n * @param elms   - An element or elements to apply styles to.\n * @param styles - An object literal with styles.\n */\nexport function style<K extends CSSStyleProperties>(\n  elms: HTMLElement | HTMLElement[],\n  styles: Record<string, string | number> | K\n): CSSStyleDeclaration[ K ] | void {\n  if ( isString( styles ) ) {\n    return isArray( elms ) ? null : getComputedStyle( elms )[ styles ];\n  }\n\n  forOwn( styles, ( value, key ) => {\n    if ( ! isNull( value ) ) {\n      forEach( elms, elm => {\n        if ( elm ) {\n          elm.style[ key ] = `${ value }`;\n        }\n      } );\n    }\n  } );\n}\n","import { style } from '../style/style';\n\n\n/**\n * Sets the `display` CSS value to the element.\n *\n * @param elm     - An element to set a new value to.\n * @param display - A new `display` value.\n */\nexport function display( elm: HTMLElement, display: string ): void {\n  style( elm, { display } );\n}\n","/**\n * Returns the specified attribute value.\n *\n * @param elm  - An element.\n * @param attr - An attribute to get.\n */\nexport function getAttribute( elm: Element, attr: string ): string {\n  return elm.getAttribute( attr );\n}\n","/**\r\n * Checks if the element contains the specified class or not.\r\n *\r\n * @param elm       - An element to check.\r\n * @param className - A class name that may be contained by the element.\r\n *\r\n * @return `true` if the element contains the class, or otherwise `false`.\r\n */\r\nexport function hasClass( elm: Element, className: string ): boolean {\r\n  return elm && elm.classList.contains( className );\r\n}\r\n","import { child } from '../child/child';\n\n\n/**\n * Parses the provided HTML string and returns the first element.\n *\n * @param html - An HTML string to parse.\n *\n * @return An Element on success, or otherwise `undefined`.\n */\nexport function parseHtml<E extends HTMLElement>( html: string ): E | undefined {\n  return child<E>( new DOMParser().parseFromString( html, 'text/html' ).body );\n}\n","/**\n * Call the `preventDefault()` of the provided event.\n *\n * @param e               - An Event object.\n * @param stopPropagation - Optional. Whether to stop the event propagation or not.\n */\nexport function prevent( e: Event, stopPropagation?: boolean ): void {\n  e.preventDefault();\n\n  if ( stopPropagation ) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n}\n","/**\n * Returns an element that matches the provided selector.\n *\n * @param parent   - A parent element to start searching from.\n * @param selector - A selector to query.\n *\n * @return A found element or `null`.\n */\nexport function query<E extends Element = Element>( parent: Element | Document, selector: string ): E | null {\n  return parent && parent.querySelector( selector );\n}\n","import { slice } from '../../arrayLike';\n\n\n/**\n * Returns elements that match the provided selector.\n *\n * @param parent   - A parent element to start searching from.\n * @param selector - A selector to query.\n *\n * @return An array with matched elements.\n */\nexport function queryAll<E extends Element = Element>( parent: Element | Document, selector: string ): E[] {\n  return slice<E>( parent.querySelectorAll( selector ) );\n}\n","/**\n * Returns a DOMRect object of the provided element.\n *\n * @param target - An element.\n */\nexport function rect( target: Element ): DOMRect {\n  return target.getBoundingClientRect();\n}\n","import { forEach } from '../../array';\n\n\n/**\n * Removes the provided node from its parent.\n *\n * @param nodes - A node or nodes to remove.\n */\nexport function remove( nodes: Node | Node[] ): void {\n  forEach( nodes, node => {\n    if ( node && node.parentNode ) {\n      node.parentNode.removeChild( node );\n    }\n  } );\n}\n","import { toggleClass } from '../toggleClass/toggleClass';\r\n\r\n\r\n/**\r\n * Removes classes from the element.\r\n *\r\n * @param elm     - An element to remove classes from.\r\n * @param classes - Classes to remove.\r\n */\r\nexport function removeClass( elm: Element, classes: string | string[] ): void {\r\n  toggleClass( elm, classes, false );\r\n}\r\n","import { isString } from '../../type/type';\n\n\n/**\n * Appends `px` to the provided number.\n * If the value is already string, just returns it.\n *\n * @param value - A value to append `px` to.\n *\n * @return A string with the CSS unit.\n */\nexport function unit( value: number | string ): string {\n  return isString( value ) ? value : value ? `${ value }px` : '';\n}\n","import { PROJECT_CODE } from '../../../constants/project';\r\n\r\n\r\n/**\r\n * Throws an error if the provided condition is falsy.\r\n *\r\n * @param condition - If falsy, an error is thrown.\r\n * @param message   - Optional. A message to display.\r\n */\r\nexport function assert( condition: any, message = '' ): void {\r\n  if ( ! condition ) {\r\n    throw new Error( `[${ PROJECT_CODE }] ${ message }` );\r\n  }\r\n}\r\n","import { AnyFunction } from '../../../types';\n\n\n/**\n * Invokes the callback on the next tick.\n *\n * @param callback - A callback function.\n */\nexport function nextTick( callback: AnyFunction ): void {\n  setTimeout( callback );\n}\n","/**\n * No operation.\n */\nexport const noop = (): void => {}; // eslint-disable-line no-empty-function, @typescript-eslint/no-empty-function\n","/**\n * The arias of `window.requestAnimationFrame()`.\n */\nexport function raf( func: FrameRequestCallback ): number {\n  return requestAnimationFrame( func );\n}\n","/**\r\n * Checks if the subject number is between `minOrMax` and `maxOrMin`.\r\n *\r\n * @param number    - A subject number to check.\r\n * @param minOrMax  - A min or max number.\r\n * @param maxOrMin  - A max or min number.\r\n * @param exclusive - Optional. Whether to exclude `x` or `y`.\r\n */\r\nexport function between( number: number, minOrMax: number, maxOrMin: number, exclusive?: boolean ): boolean {\r\n  const min = Math.min( minOrMax, maxOrMin );\r\n  const max = Math.max( minOrMax, maxOrMin );\r\n  return exclusive ? min < number && number < max : min <= number && number <= max;\r\n}\r\n","const { max, min } = Math;\r\n\r\n/**\r\n * Clamps a number.\r\n *\r\n * @param number - A subject number to check.\r\n * @param x      - A min or max number.\r\n * @param y      - A min or max number.\r\n */\r\nexport function clamp( number: number, x: number, y: number ): number {\r\n  const minimum = min( x, y );\r\n  const maximum = max( x, y );\r\n  return min( max( minimum, number ), maximum );\r\n}\r\n","/**\n * Returns the sign of the provided number.\n *\n * @param x - A number.\n *\n * @return `1` for positive numbers, `-1` for negative numbers, or `0` for `0`.\n */\nexport function sign( x: number ): number {\n  return +( x > 0 ) - +( x < 0 );\n}\n","export { between } from './between/between';\nexport { clamp }   from './clamp/clamp';\nexport { sign }    from './sign/sign';\n\nexport const { min, max, floor, ceil, abs, round } = Math;\n","import { DATA_ATTRIBUTE } from '../../constants/project';\nimport { DESTROYED } from '../../constants/states';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { assert, find, getAttribute, merge } from '../../utils';\n\n\n/**\n * The interface for the Options component.\n *\n * @since 3.0.0\n */\nexport interface OptionsComponent extends BaseComponent {\n}\n\n/**\n * The component for managing options.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return An Options component object.\n */\nexport function Options( Splide: Splide, Components: Components, options: Options ): OptionsComponent {\n  /**\n   * Keeps the initial options to apply when no matched query exists.\n   */\n  let initialOptions: Options;\n\n  /**\n   * Stores breakpoints with the MediaQueryList object.\n   */\n  let points: [ string, MediaQueryList ][];\n\n  /**\n   * Holds the current breakpoint.\n   */\n  let currPoint: string | undefined;\n\n  /**\n   * Called when the component is constructed.\n   */\n  function setup(): void {\n    try {\n      merge( options, JSON.parse( getAttribute( Splide.root, DATA_ATTRIBUTE ) ) );\n    } catch ( e ) {\n      assert( false, e.message );\n    }\n\n    initialOptions = merge( {}, options );\n  }\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    const { breakpoints } = options;\n\n    if ( breakpoints ) {\n      points = Object.keys( breakpoints )\n        .sort( ( n, m ) => +n - +m )\n        .map( point => [\n          point,\n          matchMedia( `(${ options.mediaQuery || 'max' }-width:${ point }px)` ),\n        ] );\n\n      addEventListener( 'resize', observe );\n      observe();\n    }\n  }\n\n  /**\n   * Destroys the component.\n   *\n   * @param completely - Will be `true` for complete destruction.\n   */\n  function destroy( completely: boolean ): void {\n    if ( completely ) {\n      removeEventListener( 'resize', observe );\n    }\n  }\n\n  /**\n   * Observes breakpoints.\n   * The `currPoint` may be `undefined`.\n   */\n  function observe(): void {\n    const item = find( points, item => item[ 1 ].matches ) || [];\n\n    if ( item[ 0 ] !== currPoint ) {\n      onMatch( ( currPoint = item[ 0 ] ) );\n    }\n  }\n\n  /**\n   * Called when the media query matches breakpoints.\n   *\n   * @param point - A matched point, or `undefined` that means no breakpoint matches a media query.\n   */\n  function onMatch( point: string | undefined ): void {\n    const newOptions = options.breakpoints[ point ] || initialOptions;\n\n    if ( newOptions.destroy ) {\n      Splide.options = initialOptions;\n      Splide.destroy( newOptions.destroy === 'completely' );\n    } else {\n      if ( Splide.state.is( DESTROYED ) ) {\n        destroy( true );\n        Splide.mount();\n      }\n\n      Splide.options = newOptions;\n    }\n  }\n\n  return {\n    setup,\n    mount,\n    destroy,\n  };\n}\n","/**\n * Enumerates slides from left to right.\n */\nexport const LTR = 'ltr';\n\n/**\n * Enumerates slides from right to left.\n */\nexport const RTL = 'rtl';\n\n/**\n * Enumerates slides in a col.\n */\nexport const TTB = 'ttb';\n","import { RTL, TTB } from '../../constants/directions';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\n\n\n/**\n * The interface for the Direction component.\n *\n * @since 3.0.0\n */\nexport interface DirectionComponent extends BaseComponent {\n  resolve( prop: string, axisOnly?: boolean ): string;\n  orient( value: number ): number;\n}\n\n/**\n * The translation map for directions.\n *\n * @since 3.0.0\n */\nexport const ORIENTATION_MAP = {\n  marginRight : [ 'marginBottom', 'marginLeft' ],\n  width       : [ 'height' ],\n  autoWidth   : [ 'autoHeight' ],\n  fixedWidth  : [ 'fixedHeight' ],\n  paddingLeft : [ 'paddingTop', 'paddingRight' ],\n  paddingRight: [ 'paddingBottom', 'paddingLeft' ],\n  left        : [ 'top', 'right' ],\n  right       : [ 'bottom', 'left' ],\n  x           : [ 'y' ],\n  X           : [ 'Y' ],\n  pageX       : [ 'pageY' ],\n  ArrowLeft   : [ 'ArrowUp', 'ArrowRight' ],\n  ArrowRight  : [ 'ArrowDown', 'ArrowLeft' ],\n};\n\n/**\n * The component that absorbs the difference among directions.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Direction component object.\n */\nexport function Direction( Splide: Splide, Components: Components, options: Options ): DirectionComponent {\n  /**\n   * Resolves the provided property name.\n   *\n   * @param prop     - A property name to translate.\n   * @param axisOnly - Optional. If `ture`, returns the same property for LTR and RTL.\n   */\n  function resolve( prop: string, axisOnly?: boolean ): string {\n    const { direction } = options;\n    const index = direction === RTL && ! axisOnly ? 1 : direction === TTB ? 0 : -1;\n    return ORIENTATION_MAP[ prop ][ index ] || prop;\n  }\n\n  /**\n   * Orients the value towards the current direction.\n   *\n   * @param value - A value to orient.\n   *\n   * @return The oriented value.\n   */\n  function orient( value: number ): number {\n    return value * ( options.direction === RTL ? 1 : -1 );\n  }\n\n  return {\n    resolve,\n    orient,\n  };\n}\n","import { PROJECT_CODE } from './project';\n\n\nexport const CLASS_ROOT            = PROJECT_CODE;\nexport const CLASS_SLIDER          = `${ PROJECT_CODE }__slider`;\nexport const CLASS_TRACK           = `${ PROJECT_CODE }__track`;\nexport const CLASS_LIST            = `${ PROJECT_CODE }__list`;\nexport const CLASS_SLIDE           = `${ PROJECT_CODE }__slide`;\nexport const CLASS_CLONE           = `${ CLASS_SLIDE }--clone`;\nexport const CLASS_CONTAINER       = `${ CLASS_SLIDE }__container`;\nexport const CLASS_ARROWS          = `${ PROJECT_CODE }__arrows`;\nexport const CLASS_ARROW           = `${ PROJECT_CODE }__arrow`;\nexport const CLASS_ARROW_PREV      = `${ CLASS_ARROW }--prev`;\nexport const CLASS_ARROW_NEXT      = `${ CLASS_ARROW }--next`;\nexport const CLASS_PAGINATION      = `${ PROJECT_CODE }__pagination`;\nexport const CLASS_PAGINATION_PAGE = `${ CLASS_PAGINATION }__page`;\nexport const CLASS_PROGRESS        = `${ PROJECT_CODE }__progress`;\nexport const CLASS_PROGRESS_BAR    = `${ CLASS_PROGRESS }__bar`;\nexport const CLASS_AUTOPLAY        = `${ PROJECT_CODE }__autoplay`;\nexport const CLASS_PLAY            = `${ PROJECT_CODE }__play`;\nexport const CLASS_PAUSE           = `${ PROJECT_CODE }__pause`;\nexport const CLASS_SPINNER         = `${ PROJECT_CODE }__spinner`;\nexport const CLASS_INITIALIZED     = 'is-initialized';\nexport const CLASS_ACTIVE          = 'is-active';\nexport const CLASS_PREV            = 'is-prev';\nexport const CLASS_NEXT            = 'is-next';\nexport const CLASS_VISIBLE         = 'is-visible';\nexport const CLASS_LOADING         = 'is-loading';\n\n/**\n * The array with all status classes.\n *\n * @since 3.0.0\n */\nexport const STATUS_CLASSES = [ CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING ];\n\n/**\n * The collection of classes for elements that Splide dynamically creates.\n *\n * @since 3.0.0\n */\nexport const CLASSES = {\n  slide     : CLASS_SLIDE,\n  clone     : CLASS_CLONE,\n  arrows    : CLASS_ARROWS,\n  arrow     : CLASS_ARROW,\n  prev      : CLASS_ARROW_PREV,\n  next      : CLASS_ARROW_NEXT,\n  pagination: CLASS_PAGINATION,\n  page      : CLASS_PAGINATION_PAGE,\n  spinner   : CLASS_SPINNER,\n};\n","export const EVENT_MOUNTED            = 'mounted';\nexport const EVENT_READY              = 'ready';\nexport const EVENT_MOVE               = 'move';\nexport const EVENT_MOVED              = 'moved';\nexport const EVENT_CLICK              = 'click';\nexport const EVENT_ACTIVE             = 'active';\nexport const EVENT_INACTIVE           = 'inactive';\nexport const EVENT_VISIBLE            = 'visible';\nexport const EVENT_HIDDEN             = 'hidden';\nexport const EVENT_SLIDE_KEYDOWN      = 'slide:keydown';\nexport const EVENT_REFRESH            = 'refresh';\nexport const EVENT_UPDATED            = 'undated';\nexport const EVENT_RESIZE             = 'resize';\nexport const EVENT_RESIZED            = 'resized';\nexport const EVENT_DRAG               = 'drag';\nexport const EVENT_DRAGGING           = 'dragging';\nexport const EVENT_DRAGGED            = 'dragged';\nexport const EVENT_SCROLL             = 'scroll';\nexport const EVENT_SCROLLED           = 'scrolled';\nexport const EVENT_DESTROY            = 'destroy';\nexport const EVENT_ARROWS_MOUNTED     = 'arrows:mounted';\nexport const EVENT_ARROWS_UPDATED     = 'arrows:updated';\nexport const EVENT_PAGINATION_MOUNTED = 'pagination:mounted';\nexport const EVENT_PAGINATION_PAGE    = 'pagination:page';\nexport const EVENT_PAGINATION_UPDATED = 'pagination:updated';\nexport const EVENT_NAVIGATION_MOUNTED = 'navigation:mounted';\nexport const EVENT_AUTOPLAY_PLAY      = 'autoplay:play';\nexport const EVENT_AUTOPLAY_PLAYING   = 'autoplay:playing';\nexport const EVENT_AUTOPLAY_PAUSE     = 'autoplay:pause';\nexport const EVENT_LAZYLOAD_LOADED    = 'lazyload:loaded';\n\n","import { AnyFunction } from '../../types';\nimport { forOwn, push, slice, toArray } from '../../utils';\n\n\n/**\n * The interface for the EventBus instance.\n *\n * @since 3.0.0\n */\nexport interface EventBusObject {\n  on( events: string | string[], callback: EventBusCallback, key?: object, priority?: number ): void;\n  off( events: string | string[], key?: object ): void;\n  offBy( key: object ): void;\n  emit( event: string, ...args: any[] ): void;\n  destroy(): void;\n}\n\n/**\n * The interface for each event handler object.\n *\n * @since 3.0.0\n */\nexport interface EventHandler {\n  event: string;\n  callback: AnyFunction;\n  namespace: string;\n  priority: number;\n  key?: object;\n}\n\n/**\n * The type for a callback function of the EventBus.\n *\n * @since 3.0.0\n */\nexport type EventBusCallback = AnyFunction;\n\n/**\n * The constructor to provided a simple event system.\n *\n * @since 3.0.0\n *\n * @return An EventBus object.\n */\nexport function EventBus(): EventBusObject {\n  /**\n   * The collection of registered handlers.\n   */\n  let handlers: Record<string, EventHandler[]> = {};\n\n  /**\n   * Registers an event handler.\n   *\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to add a namespace.\n   * @param callback - A callback function to register.\n   * @param key      - Optional. An object for an identifier of the handler.\n   * @param priority - Optional. A priority number for the order in which the callbacks are invoked.\n   *                   Lower numbers correspond with earlier execution. The default value is 10.\n   */\n  function on( events: string | string[], callback: EventBusCallback, key?: object, priority = 10 ): void {\n    forEachEvent( events, ( event, namespace ) => {\n      handlers[ event ] = handlers[ event ] || [];\n      push( handlers[ event ], { event, callback, namespace, priority, key } )\n        .sort( ( handler1, handler2 ) => handler1.priority - handler2.priority );\n    } );\n  }\n\n  /**\n   * Removes event handlers registered by `on()`.\n   * If only the event name is provided, all handlers that associate with the event are removed.\n   * If the event name and namespace are specified, handlers that associate with the event and namespace are removed.\n   *\n   * @param events - An event name or names separated by spaces. Use a dot(.) to add a namespace.\n   * @param key    - Optional. An object for an identifier of the handler.\n   */\n  function off( events: string | string[], key?: object ): void {\n    forEachEvent( events, ( event, namespace ) => {\n      const eventHandlers = handlers[ event ];\n\n      handlers[ event ] = eventHandlers && eventHandlers.filter( handler => {\n        return handler.key ? handler.key !== key : handler.namespace !== namespace;\n      } );\n    } );\n  }\n\n  /**\n   * Removes all handlers locked by the specified key.\n   *\n   * @param key - A key.\n   */\n  function offBy( key: object ): void {\n    forOwn( handlers, ( eventHandlers, event ) => {\n      off( event, key );\n    } );\n  }\n\n  /**\n   * Triggers callback functions.\n   * This accepts additional arguments and passes them to callbacks.\n   *\n   * @param event - An event name.\n   */\n  function emit( event: string ): void {\n    ( handlers[ event ] || [] ).forEach( handler => {\n      handler.callback.apply( handler, slice( arguments, 1 ) );\n    } );\n  }\n\n  /**\n   * Removes all handlers.\n   */\n  function destroy(): void {\n    handlers = {};\n  }\n\n  /**\n   * Parses provided events and iterates over them.\n   *\n   * @param events   - An event or events.\n   * @param iteratee - An iteratee function.\n   */\n  function forEachEvent( events: string | string[], iteratee: ( event: string, namespace: string ) => void ): void {\n    toArray( events ).join( ' ' ).split( ' ' ).forEach( eventNS => {\n      const fragments = eventNS.split( '.' );\n      iteratee( fragments[ 0 ], fragments[ 1 ] );\n    } );\n  }\n\n  return {\n    on,\n    off,\n    offBy,\n    emit,\n    destroy,\n  };\n}\n","import { EVENT_DESTROY } from '../../constants/events';\nimport { Splide } from '../../core/Splide/Splide';\nimport { AnyFunction } from '../../types';\nimport { forEach } from '../../utils';\nimport { EventBusCallback } from '../EventBus/EventBus';\n\n\n/**\n * The interface for the EventInterface object.\n *\n * @since 3.0.0\n */\nexport interface EventInterfaceObject {\n  on( events: string | string[], callback: EventBusCallback, priority?: number ): void;\n  off( events: string | string[] ): void;\n  emit( event: string, ...args: any[] ): void;\n  bind(\n    target: Element | Window | Document | Array<Element | Window | Document>,\n    events: string,\n    callback: AnyFunction,\n    options?: AddEventListenerOptions\n  ): void\n  unbind( target: Element | Window | Document | Array<Element | Window | Document>, events: string ): void;\n  destroy(): void;\n}\n\n/**\n * The type for event targets.\n *\n * @since 3.0.0\n */\ntype EventTarget = Element | Window | Document;\n\n/**\n * The function that provides interface for internal and native events.\n *\n * @since 3.0.0\n *\n * @param Splide - A Splide instance.\n *\n * @return A collection of interface functions.\n */\nexport function EventInterface( Splide: Splide ): EventInterfaceObject {\n  /**\n   * Holds the event object.\n   */\n  const { event } = Splide;\n\n  /**\n   * The key for events.\n   */\n  const key = {};\n\n  /**\n   * Stores all handlers that listen to native events.\n   */\n  let listeners: [ EventTarget, string, AnyFunction, AddEventListenerOptions? ][] = [];\n\n  /**\n   * Registers an event handler with an unique key.\n   * It can only be removed by `off()` method below.\n   *\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to add a namespace.\n   * @param callback - A callback function to register.\n   * @param priority - Optional. A priority number for the order in which the callbacks are invoked.\n   *                   Lower numbers correspond with earlier execution. The default value is 10.\n   */\n  function on( events: string | string[], callback: EventBusCallback, priority?: number ): void {\n    event.on( events, callback, key, priority );\n  }\n\n  /**\n   * Removes event handlers registered by `on()`.\n   *\n   * @param events - An event name or names separated by spaces. Use a dot(.) to add a namespace.\n   */\n  function off( events: string | string[] ): void {\n    event.off( events, key );\n  }\n\n  /**\n   * Listens to native events.\n   * Splide#destory() will remove all registered listeners.\n   *\n   * @param targets  - A target element, the window object or the document object.\n   * @param events   - An event or events to listen to.\n   * @param callback - A callback function.\n   * @param options  - Optional. The options to pass to the `addEventListener` function.\n   */\n  function bind(\n    targets: EventTarget | EventTarget[],\n    events: string,\n    callback: AnyFunction,\n    options?: AddEventListenerOptions\n  ): void {\n    forEachEvent( targets, events, ( target, event ) => {\n      listeners.push( [ target, event, callback, options ] );\n      target.addEventListener( event, callback, options );\n    } );\n  }\n\n  /**\n   * Removes the event handler.\n   *\n   * @param targets - A target element, the window object or the document object.\n   * @param events  - An event name or names to remove.\n   */\n  function unbind( targets: EventTarget | EventTarget[], events: string ): void {\n    forEachEvent( targets, events, ( target, event ) => {\n      listeners = listeners.filter( listener => {\n        if ( listener[ 0 ] === target && listener[ 1 ] === event ) {\n          target.removeEventListener( event, listener[ 2 ], listener[ 3 ] );\n          return false;\n        }\n\n        return true;\n      } );\n    } );\n  }\n\n  /**\n   * Iterates over each target and event.\n   *\n   * @param targets  - A target element, the window object or the document object.\n   * @param events   - An event name or names.\n   * @param iteratee - An iteratee function.\n   */\n  function forEachEvent(\n    targets: EventTarget | EventTarget[],\n    events: string,\n    iteratee: ( target: EventTarget, event: string ) => void\n  ): void {\n    forEach( targets, target => {\n      if ( target ) {\n        events.split( ' ' ).forEach( iteratee.bind( null, target ) );\n      }\n    } );\n  }\n\n  /**\n   * Removes all listeners.\n   */\n  function destroy(): void {\n    listeners = listeners.filter( data => unbind( data[ 0 ], data[ 1 ] ) );\n    event.offBy( key );\n  }\n\n  /**\n   * Invokes destroy when the slider is destroyed.\n   */\n  event.on( EVENT_DESTROY, destroy, key );\n\n  return {\n    on,\n    off,\n    emit: event.emit,\n    bind,\n    unbind,\n    destroy,\n  };\n}\n","import { raf } from '../../utils';\n\n\n/**\n * The interface for the returning value of the RequestInterval.\n *\n * @since 3.0.0\n */\nexport interface RequestIntervalInterface {\n  start( resume?: boolean ): void;\n  pause(): void;\n  rewind(): void;\n  cancel(): void;\n  isPaused(): boolean;\n}\n\n/**\n * Requests interval like the native `setInterval()` with using `requestAnimationFrame`.\n *\n * @since 3.0.0\n *\n * @param interval   - The interval duration in milliseconds.\n * @param onInterval - The callback fired on every interval.\n * @param onUpdate   - Optional. Called on every animation frame, taking the progress rate.\n * @param limit      - Optional. Limits the number of interval.\n */\nexport function RequestInterval(\n  interval: number,\n  onInterval: () => void,\n  onUpdate?: ( rate: number ) => void,\n  limit?: number\n): RequestIntervalInterface {\n  const { now } = Date;\n\n  /**\n   * The time when the interval starts.\n   */\n  let startTime: number;\n\n  /**\n   * The current progress rate.\n   */\n  let rate = 0;\n\n  /**\n   * The animation frame ID.\n   */\n  let id: number;\n\n  /**\n   * Indicates whether the interval is currently paused or not.\n   */\n  let paused = true;\n\n  /**\n   * The loop count. This only works when the `limit` argument is provided.\n   */\n  let count = 0;\n\n  /**\n   * The update function called on every animation frame.\n   */\n  function update(): void {\n    if ( ! paused ) {\n      const elapsed = now() - startTime;\n\n      if ( elapsed >= interval ) {\n        rate      = 1;\n        startTime = now();\n      } else {\n        rate = elapsed / interval;\n      }\n\n      if ( onUpdate ) {\n        onUpdate( rate );\n      }\n\n      if ( rate === 1 ) {\n        onInterval();\n\n        if ( limit && ++count >= limit ) {\n          pause();\n          return;\n        }\n      }\n\n      raf( update );\n    }\n  }\n\n  /**\n   * Starts the interval.\n   *\n   * @param resume - Optional. Whether to resume the paused progress or not.\n   */\n  function start( resume?: boolean ): void {\n    ! resume && cancel();\n    startTime = now() - ( resume ? rate * interval : 0 );\n    paused    = false;\n    raf( update );\n  }\n\n  /**\n   * Pauses the interval.\n   */\n  function pause(): void {\n    paused = true;\n  }\n\n  /**\n   * Rewinds the current progress.\n   */\n  function rewind(): void {\n    startTime = now();\n    rate      = 0;\n\n    if ( onUpdate ) {\n      onUpdate( rate );\n    }\n  }\n\n  /**\n   * Cancels the interval.\n   */\n  function cancel() {\n    cancelAnimationFrame( id );\n    rate   = 0;\n    id     = 0;\n    paused = true;\n  }\n\n  /**\n   * Checks if the interval is paused or not.\n   *\n   * @return `true` if the interval is paused, or otherwise `false`.\n   */\n  function isPaused(): boolean {\n    return paused;\n  }\n\n  return {\n    start,\n    rewind,\n    pause,\n    cancel,\n    isPaused,\n  };\n}\n","import { includes, toArray } from '../../utils';\n\n\n/**\n * The interface for the State object.\n *\n * @since 3.0.0\n */\nexport interface StateObject {\n  set( state: number ): void;\n  is( states: number | number[] ): boolean;\n}\n\n/**\n * The function providing a super simple state system.\n *\n * @param initialState - Specifies the initial state.\n */\nexport function State( initialState: number ): StateObject {\n  /**\n   * The current state.\n   */\n  let state = initialState;\n\n  /**\n   * Sets a new state.\n   *\n   * @param value - A new state value.\n   */\n  function set( value: number ): void {\n    state = value;\n  }\n\n  /**\n   * Checks if the current state matches the provided one.\n   *\n   * @param states - A state to check.\n   *\n   * @return `true` if the current state is the provided one.\n   */\n  function is( states: number | number[] ): boolean {\n    return includes( toArray( states ), state );\n  }\n\n  return { set, is };\n}\n","import { AnyFunction } from '../../types';\nimport { RequestInterval, RequestIntervalInterface } from '../RequestInterval/RequestInterval';\n\n\n/**\n * The interface for the returning value of the RequestInterval.\n *\n * @since 3.0.0\n */\nexport interface ThrottleInstance<F extends AnyFunction> extends Function {\n  ( ...args: Parameters<F> ): void;\n}\n\n/**\n * Returns the throttled function.\n *\n * @param func     - A function to throttle.\n * @param duration - Optional. Throttle duration in milliseconds.\n *\n * @return A throttled function.\n */\nexport function Throttle<F extends AnyFunction>(\n  func: F,\n  duration?: number\n): ThrottleInstance<F> {\n  let interval: RequestIntervalInterface;\n\n  function throttled( this: ThisParameterType<F> ): void {\n    if ( ! interval ) {\n      interval = RequestInterval( duration || 0, () => {\n        func.apply( this, arguments );\n        interval = null;\n      }, null, 1 );\n\n      interval.start();\n    }\n  }\n\n  return throttled;\n}\n","import { forEach } from '../../array';\n\n\n/**\n * Formats a string.\n *\n * @param string       - A string to format.\n * @param replacements - A replacement or replacements.\n *\n * @return A formatted string.\n */\nexport function format( string: string, replacements: string | number | Array<string | number> ): string {\n  forEach( replacements, replacement => {\n    string = string.replace( '%s', `${ replacement }` );\n  } );\n\n  return string;\n}\n","/**\n * Pads the number with 0.\n *\n * @param number - A number to pad.\n *\n * @return string - Padded number.\n */\nexport function pad( number: number ): string {\n  return number < 10 ? `0${ number }` : `${ number }`;\n}\n","import { pad } from '../pad/pad';\n\n\n/**\n * Stores unique IDs.\n *\n * @since 3.0.0\n */\nconst ids: Record<string, number> = {};\n\n/**\n * Returns a sequential unique ID as \"{ prefix }-{ number }\".\n *\n * @param prefix - A prefix for the ID.\n */\nexport function uniqueId( prefix: string ): string {\n  return `${ prefix }${ pad( ( ids[ prefix ] = ( ids[ prefix ] || 0 ) + 1 ) ) }`;\n}\n","import {\n  CLASS_ACTIVE,\n  CLASS_ARROW_NEXT,\n  CLASS_ARROW_PREV,\n  CLASS_ARROWS,\n  CLASS_AUTOPLAY,\n  CLASS_CLONE,\n  CLASS_LIST,\n  CLASS_PAUSE,\n  CLASS_PLAY,\n  CLASS_PROGRESS,\n  CLASS_PROGRESS_BAR,\n  CLASS_ROOT,\n  CLASS_SLIDE,\n  CLASS_SLIDER,\n  CLASS_TRACK,\n} from '../../constants/classes';\nimport { EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\nimport { PROJECT_CODE } from '../../constants/project';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { addClass, assert, assign, child, children, empty, push, query, removeClass } from '../../utils';\nimport { uniqueId } from '../../utils/string';\n\n\n/**\n * The interface for elements which the slider consists of.\n *\n * @since 3.0.0\n */\nexport interface ElementCollection {\n  root: HTMLElement;\n  slider: HTMLElement;\n  track: HTMLElement;\n  list: HTMLElement;\n  slides: HTMLElement[];\n  arrows: HTMLElement;\n  prev: HTMLButtonElement;\n  next: HTMLButtonElement;\n  bar: HTMLElement;\n  play: HTMLElement;\n  pause: HTMLElement;\n}\n\n/**\n * The interface for the Elements component.\n *\n * @since 3.0.0\n */\nexport interface ElementsComponent extends BaseComponent, ElementCollection {\n}\n\n/**\n * The component that collects and handles elements which the slider consists of.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return An Elements component object.\n */\nexport function Elements( Splide: Splide, Components: Components, options: Options ): ElementsComponent {\n  const { on } = EventInterface( Splide );\n  const { root } = Splide;\n  const elements: ElementCollection = {} as ElementCollection;\n\n  /**\n   * Stores all slide elements.\n   */\n  const slides: HTMLElement[] = [];\n\n  /**\n   * Stores all root classes.\n   */\n  let classes: string[];\n\n  /**\n   * The slider element that may be `undefined`.\n   */\n  let slider: HTMLElement;\n\n  /**\n   * The track element.\n   */\n  let track: HTMLElement;\n\n  /**\n   * The list element.\n   */\n  let list: HTMLElement;\n\n  /**\n   * Called when the component is constructed.\n   */\n  function setup(): void {\n    collect();\n    identify();\n    addClass( root, ( classes = getClasses() ) );\n  }\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    on( EVENT_REFRESH, refresh );\n    on( EVENT_UPDATED, update );\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    empty( slides );\n    removeClass( root, classes );\n  }\n\n  /**\n   * Recollects slide elements.\n   */\n  function refresh(): void {\n    destroy();\n    setup();\n  }\n\n  /**\n   * Updates the status of elements.\n   */\n  function update(): void {\n    removeClass( root, classes );\n    addClass( root, ( classes = getClasses() ) );\n  }\n\n  /**\n   * Collects elements which the slider consists of.\n   */\n  function collect(): void {\n    slider = child( root, `.${ CLASS_SLIDER }` );\n    track  = query( root, `.${ CLASS_TRACK }` );\n    list   = child( track, `.${ CLASS_LIST }` );\n\n    assert( track && list, 'Missing a track/list element.' );\n\n    push( slides, children( list, `.${ CLASS_SLIDE }:not(.${ CLASS_CLONE })` ) );\n\n    const autoplay = find( `.${ CLASS_AUTOPLAY }` );\n    const arrows   = find( `.${ CLASS_ARROWS }` );\n\n    assign( elements, {\n      root,\n      slider,\n      track,\n      list,\n      slides,\n      arrows,\n      prev : query( arrows, `.${ CLASS_ARROW_PREV }` ),\n      next : query( arrows, `.${ CLASS_ARROW_NEXT }` ),\n      bar  : query( find( `.${ CLASS_PROGRESS }` ), `.${ CLASS_PROGRESS_BAR }` ),\n      play : query( autoplay, `.${ CLASS_PLAY }` ),\n      pause: query( autoplay, `.${ CLASS_PAUSE }` ),\n    } );\n  }\n\n  /**\n   * Assigns unique IDs to essential elements.\n   */\n  function identify(): void {\n    const id = root.id || uniqueId( PROJECT_CODE );\n    root.id  = id;\n    track.id = track.id || `${ id }-track`;\n    list.id  = list.id || `${ id }-list`;\n  }\n\n  /**\n   * Finds an element only in children of the root or slider element.\n   *\n   * @return {Element} - A found element or undefined.\n   */\n  function find( selector: string ): HTMLElement {\n    return child( root, selector ) || child( slider, selector );\n  }\n\n  /**\n   * Return an array with classes for the root element.\n   *\n   * @return An array with classes.\n   */\n  function getClasses(): string[] {\n    return [\n      `${ CLASS_ROOT }--${ options.type }`,\n      `${ CLASS_ROOT }--${ options.direction }`,\n      options.drag && `${ CLASS_ROOT }--draggable`,\n      options.isNavigation && `${ CLASS_ROOT }--nav`,\n      CLASS_ACTIVE,\n    ];\n  }\n\n  return assign( elements, {\n    setup,\n    mount,\n    destroy,\n  } );\n}\n","import { BaseComponent } from '../../types';\nimport { create, find, isHTMLElement, remove } from '../../utils';\n\n/**\n * The interface for the Style component.\n *\n * @since 3.0.0\n */\nexport interface StyleComponent extends BaseComponent {\n  rule( selector: string, prop: string, value: string | number ): void;\n  ruleBy( target: string | HTMLElement, prop: string, value: string | number ): void;\n}\n\n/**\n * The component for managing styles of the slider.\n *\n * @since 3.0.0\n *\n * @return A Style component object.\n */\nexport function Style(): StyleComponent {\n  /**\n   * The style element for the slider.\n   */\n  let style: HTMLStyleElement;\n\n  /**\n   * The CSSStyleSheet object of the created style element.\n   */\n  let sheet: CSSStyleSheet;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    style = create( 'style', {}, document.head );\n    sheet = style.sheet;\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    remove( style );\n    sheet = null;\n  }\n\n  /**\n   * Registers the style for the selector.\n   *\n   * @param selector - A selector string.\n   * @param prop     - A CSS property, accepting the camel case.\n   * @param value    - A CSS value.\n   */\n  function rule( selector: string, prop: string, value: string | number ): void {\n    const { cssRules } = sheet;\n    const cssRule = find( cssRules, cssRule => isCSSStyleRule( cssRule ) && cssRule.selectorText === selector )\n      || cssRules[ sheet.insertRule( `${ selector }{}`, 0 ) ];\n\n    if ( isCSSStyleRule( cssRule ) ) {\n      cssRule.style[ prop ] = `${ value }`;\n    }\n  }\n\n  /**\n   * Registers the style by the element or the ID.\n   *\n   * @param target - A target element or ID.\n   * @param prop   - A CSS property, accepting the camel case.\n   * @param value  - A CSS value.\n   */\n  function ruleBy( target: string | HTMLElement, prop: string, value: string | number ): void {\n    rule( `#${ isHTMLElement( target ) ? target.id : target }`, prop, value );\n  }\n\n  /**\n   * Checks if the provided rule is a CSSStyleRule instance or not.\n   *\n   * @param cssRule - An instance to check.\n   *\n   * @return `true` if the cssRule is an instance of CSSStyleRule, or otherwise `false`.\n   */\n  function isCSSStyleRule( cssRule: CSSRule ): cssRule is CSSStyleRule {\n    return cssRule instanceof CSSStyleRule;\n  }\n\n  return {\n    mount,\n    destroy,\n    rule,\n    ruleBy,\n  };\n}\n","export const ROLE           = 'role';\nexport const ARIA_CONTROLS  = 'aria-controls';\nexport const ARIA_CURRENT   = 'aria-current';\nexport const ARIA_LABEL     = 'aria-label';\nexport const ARIA_HIDDEN    = 'aria-hidden';\nexport const TAB_INDEX      = 'tabindex';\nexport const DISABLED       = 'disabled';\n\n/**\n * The array with all attributes.\n *\n * @since 3.0.0\n */\nexport const ALL_ATTRIBUTES = [\n  ROLE,\n  ARIA_CONTROLS,\n  ARIA_CURRENT,\n  ARIA_LABEL,\n  ARIA_HIDDEN,\n  TAB_INDEX,\n  DISABLED,\n];\n","/**\n * The type for the regular slider.\n *\n * @since 3.0.0\n */\nexport const SLIDE = 'slide';\n\n/**\n * The type for the carousel slider.\n *\n * @since 3.0.0\n */\nexport const LOOP = 'loop';\n\n/**\n * The type for the fade slider that can not have multiple slides in a page.\n *\n * @since 3.0.0\n */\nexport const FADE = 'fade';\n","import {\n  ALL_ATTRIBUTES,\n  ARIA_CONTROLS,\n  ARIA_CURRENT,\n  ARIA_HIDDEN,\n  ARIA_LABEL,\n  ROLE,\n  TAB_INDEX,\n} from '../../constants/attributes';\nimport {\n  CLASS_ACTIVE,\n  CLASS_CONTAINER,\n  CLASS_NEXT,\n  CLASS_PREV,\n  CLASS_VISIBLE,\n  STATUS_CLASSES,\n} from '../../constants/classes';\nimport {\n  EVENT_ACTIVE,\n  EVENT_CLICK,\n  EVENT_HIDDEN,\n  EVENT_INACTIVE,\n  EVENT_MOUNTED,\n  EVENT_MOVE,\n  EVENT_MOVED,\n  EVENT_RESIZED,\n  EVENT_SCROLLED,\n  EVENT_SLIDE_KEYDOWN,\n  EVENT_UPDATED,\n  EVENT_VISIBLE,\n} from '../../constants/events';\nimport { FADE, SLIDE } from '../../constants/types';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent } from '../../types';\nimport {\n  abs,\n  ceil,\n  child,\n  floor,\n  hasClass,\n  isHTMLButtonElement,\n  min,\n  rect,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n  toggleClass,\n} from '../../utils';\nimport { format, pad } from '../../utils/string';\n\n\n/**\n * The interface for the Slide sub component.\n *\n * @since 3.0.0\n */\nexport interface  SlideComponent extends BaseComponent {\n  index: number;\n  slideIndex: number;\n  slide: HTMLElement;\n  container: HTMLElement;\n  isClone: boolean;\n  rule( prop: string, value: string | number, useContainer?: boolean ): void\n  isWithin( from: number, distance: number ): boolean;\n}\n\n/**\n * The sub component for managing each slide.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param index      - A slide index.\n * @param slideIndex - A slide index for clones. This must be `-1` if the slide is not clone.\n * @param slide      - A slide element.\n *\n * @return A Slide sub component.\n */\nexport function Slide( Splide: Splide, index: number, slideIndex: number, slide: HTMLElement ): SlideComponent {\n  const { on, emit, bind, destroy: destroyEvents } = EventInterface( Splide );\n  const { Components, root, options } = Splide;\n  const { isNavigation, updateOnMove } = options;\n  const { resolve } = Components.Direction;\n  const isClone   = slideIndex > -1;\n  const container = child( slide, `.${ CLASS_CONTAINER }` );\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount( this: SlideComponent ): void {\n    init();\n\n    bind( slide, 'click keydown', e => {\n      emit( e.type === 'click' ? EVENT_CLICK : EVENT_SLIDE_KEYDOWN, this, e );\n    } );\n\n    on( [ EVENT_MOUNTED, EVENT_MOVED, EVENT_UPDATED, EVENT_RESIZED, EVENT_SCROLLED ], update.bind( this ) );\n\n    if ( updateOnMove ) {\n      on( EVENT_MOVE, onMove );\n    }\n  }\n\n  /**\n   * If the `updateOnMove` option is `true`, called when the slider starts moving.\n   *\n   * @param next - A next index.\n   * @param prev - A previous index.\n   * @param dest - A destination index.\n   */\n  function onMove( next: number, prev: number, dest: number ): void {\n    if ( dest === index ) {\n      updateActivity.call( this, true );\n    }\n\n    update.call( this );\n  }\n\n  /**\n   * Initializes the component.\n   */\n  function init(): void {\n    if ( ! isClone ) {\n      slide.id = `${ root.id }-slide${ pad( index + 1 ) }`;\n    }\n\n    if ( isNavigation ) {\n      if ( ! isHTMLButtonElement( slide ) ) {\n        setAttribute( slide, ROLE, 'button' );\n      }\n\n      const idx      = isClone ? slideIndex : index;\n      const label    = format( options.i18n.slideX, idx + 1 );\n      const controls = Splide.splides.map( splide => splide.root.id ).join( ' ' );\n\n      setAttribute( slide, ARIA_LABEL, label );\n      setAttribute( slide, ARIA_CONTROLS, controls );\n    }\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    destroyEvents();\n    removeClass( slide, STATUS_CLASSES );\n    removeAttribute( slide, ALL_ATTRIBUTES );\n  }\n\n  /**\n   * Updates attribute and classes of the slide.\n   */\n  function update( this: SlideComponent ): void {\n    if ( Components.Controller ) {\n      const { index: currIndex } = Splide;\n\n      updateActivity.call( this, isActive() );\n      updateVisibility.call( this, isVisible() );\n\n      toggleClass( slide, CLASS_PREV, index === currIndex - 1 );\n      toggleClass( slide, CLASS_NEXT, index === currIndex + 1 );\n    }\n  }\n\n  /**\n   * Updates the status related with activity.\n   *\n   * @param active - Set `true` if the slide is active.\n   */\n  function updateActivity( this: SlideComponent, active: boolean ): void {\n    toggleClass( slide, CLASS_ACTIVE, active );\n\n    if ( active ) {\n      if ( ! hasClass( slide, CLASS_ACTIVE ) ) {\n        isNavigation && setAttribute( slide, ARIA_CURRENT, true );\n        emit( EVENT_ACTIVE, this );\n      }\n    } else {\n      if ( hasClass( slide, CLASS_ACTIVE ) ) {\n        removeAttribute( slide, ARIA_CURRENT );\n        emit( EVENT_INACTIVE, this );\n      }\n    }\n  }\n\n  /**\n   * Updates the status related with visibility.\n   *\n   * @param visible - Set `true` if the slide is visible.\n   */\n  function updateVisibility( this: SlideComponent, visible: boolean ): void {\n    toggleClass( slide, CLASS_VISIBLE, visible );\n    setAttribute( slide, ARIA_HIDDEN, ! visible || null );\n    setAttribute( slide, TAB_INDEX, visible && options.slideFocus ? 0 : null );\n\n    if ( visible ) {\n      if ( ! hasClass( slide, CLASS_VISIBLE ) ) {\n        emit( EVENT_VISIBLE, this );\n      }\n    } else {\n      if ( hasClass( slide, CLASS_VISIBLE ) ) {\n        emit( EVENT_HIDDEN, this );\n      }\n    }\n  }\n\n  /**\n   * Adds a CSS rule to the slider or the container.\n   *\n   * @param prop         - A property name.\n   * @param value        - A CSS value to add.\n   * @param useContainer - Optional. Determines whether to apply the rule to the container or not.\n   */\n  function rule( prop: string, value: string | number, useContainer?: boolean ): void {\n    const selector = `#${ slide.id }${ container && useContainer ? ` > .${ CLASS_CONTAINER }` : '' }`;\n    Components.Style.rule( selector, prop, value );\n  }\n\n  /**\n   * Checks if the slide is active or not.\n   *\n   * @return `true` if the slide is active.\n   */\n  function isActive(): boolean {\n    return Splide.index === index;\n  }\n\n  /**\n   * Checks if the slide is visible or not.\n   */\n  function isVisible(): boolean {\n    if ( Splide.is( FADE ) ) {\n      return isActive();\n    }\n\n    const trackRect = rect( Components.Elements.track );\n    const slideRect = rect( slide );\n    const left      = resolve( 'left' );\n    const right     = resolve( 'right' );\n\n    return floor( trackRect[ left ] ) <= slideRect[ left ] && slideRect[ right ] <= ceil( trackRect[ right ] );\n  }\n\n  /**\n   * Calculates how far this slide is from another slide and\n   * returns `true` if the distance is within the given number.\n   *\n   * @param from     - An index of a base slide.\n   * @param distance - `true` if the slide is within this number.\n   *\n   * @return `true` if the slide is within the `distance` from the base slide, or otherwise `false`.\n   */\n  function isWithin( from: number, distance: number ): boolean {\n    let diff = abs( from - index );\n\n    if ( ! Splide.is( SLIDE ) && ! isClone ) {\n      diff = min( diff, Splide.length - diff );\n    }\n\n    return diff <= distance;\n  }\n\n  return {\n    index,\n    slideIndex,\n    slide,\n    container,\n    isClone,\n    mount,\n    destroy,\n    rule,\n    isWithin,\n  };\n}\n","import { EVENT_REFRESH, EVENT_RESIZE } from '../../constants/events';\nimport { Splide } from '../../core/Splide/Splide';\nimport { EventInterface } from '../../constructors';\nimport { AnyFunction, BaseComponent, Components, Options } from '../../types';\nimport {\n  addClass,\n  append,\n  before,\n  between,\n  empty,\n  forEach as forEachItem,\n  includes,\n  isFunction,\n  isHTMLElement,\n  isString,\n  matches,\n  parseHtml,\n  queryAll,\n  remove as removeNode,\n  toArray,\n} from '../../utils';\nimport { Slide, SlideComponent } from './Slide';\n\n\n/**\n * The interface for the Slides component.\n *\n * @since 3.0.0\n */\nexport interface  SlidesComponent extends BaseComponent {\n  register( slide: HTMLElement, index: number, slideIndex: number ): void;\n  get( excludeClones?: boolean ): SlideComponent[];\n  getIn( page: number ): SlideComponent[];\n  getAt( index: number ): SlideComponent | undefined;\n  add( slide: string | Element | Array<string | Element>, index?: number, callback?: AnyFunction ): void;\n  remove( selector: SlideMatcher ): void;\n  forEach( iteratee: SlidesIteratee, excludeClones?: boolean ): void;\n  filter( matcher: SlideMatcher ): SlideComponent[];\n  rule( prop: string, value: string | number, useContainer?: boolean ): void\n  getLength( excludeClones?: boolean ): number;\n  isEnough(): boolean;\n}\n\n/**\n * The iteratee function for Slides.\n *\n * @since 3.0.0\n */\nexport type SlidesIteratee = ( Slide: SlideComponent, index: number, Slides: SlideComponent[] ) => void\n\n/**\n * The predicate function for Slides.\n *\n * @since 3.0.0\n */\nexport type SlidesPredicate = ( Slide: SlideComponent, index: number, Slides: SlideComponent[] ) => any\n\n/**\n * The type for filtering SlideComponent objects.\n *\n * @since 3.0.0\n */\nexport type SlideMatcher = number | number[] | string | SlidesPredicate;\n\n/**\n * The component for managing all slides include clones.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return An Slides component object.\n */\nexport function Slides( Splide: Splide, Components: Components, options: Options ): SlidesComponent {\n  const { on, emit, bind } = EventInterface( Splide );\n  const { slides, list } = Components.Elements;\n\n  /**\n   * Stores all SlideComponent objects.\n   */\n  const Slides: SlideComponent[] = [];\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    init();\n    on( EVENT_REFRESH, refresh );\n  }\n\n  /**\n   * Initializes the component.\n   */\n  function init(): void {\n    slides.forEach( ( slide, index ) => { register( slide, index, -1 ) } );\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    forEach( Slide => { Slide.destroy() } );\n    empty( Slides );\n  }\n\n  /**\n   * Discards all Slide components and regenerates them.\n   */\n  function refresh(): void {\n    destroy();\n    init();\n  }\n\n  /**\n   * Registers a slide element and creates a Slide object.\n   *\n   * @param slide      - A slide element to register.\n   * @param index      - A slide index.\n   * @param slideIndex - A slide index for clones. This must be `-1` for regular slides.\n   */\n  function register( slide: HTMLElement, index: number, slideIndex: number ): void {\n    const object = Slide( Splide, index, slideIndex, slide );\n    object.mount();\n    Slides.push( object );\n  }\n\n  /**\n   * Returns all Slide objects.\n   *\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\n   *\n   * @return An array with Slide objects.\n   */\n  function get( excludeClones?: boolean ): SlideComponent[] {\n    return excludeClones ? filter( Slide => ! Slide.isClone ) : Slides;\n  }\n\n  /**\n   * Returns slides in the specified page.\n   *\n   * @param page - A page index.\n   *\n   * @return An array with slides that belong to the page.\n   */\n  function getIn( page: number ): SlideComponent[] {\n    const { Controller } = Components;\n    const index = Controller.toIndex( page );\n    const max   = Controller.hasFocus() ? 1 : options.perPage;\n    return filter( Slide => between( Slide.index, index, index + max - 1 ) );\n  }\n\n  /**\n   * Returns a Slide object at the specified index.\n   *\n   * @param index - A slide index.\n   *\n   * @return A Slide object if available, or otherwise `undefined`.\n   */\n  function getAt( index: number ): SlideComponent | undefined {\n    return filter( index )[ 0 ];\n  }\n\n  /**\n   * Inserts a slide or slides at a specified index.\n   *\n   * @param items - A slide element, an HTML string or an array with them.\n   * @param index - Optional. An index to insert the slide at. If omitted, appends it to the list.\n   */\n  function add( items: string | Element | Array<string | Element>, index?: number ): void {\n    forEachItem( items, slide => {\n      if ( isString( slide ) ) {\n        slide = parseHtml( slide );\n      }\n\n      if ( isHTMLElement( slide ) ) {\n        const ref = slides[ index ];\n        ref ? before( slide, ref ) : append( list, slide );\n        addClass( slide, options.classes.slide );\n        observeImages( slide, emit.bind( null, EVENT_RESIZE ) );\n      }\n    } );\n\n    emit( EVENT_REFRESH );\n  }\n\n  /**\n   * Removes slides that match the matcher\n   * that can be an index, an array with indices, a selector, or an iteratee function.\n   *\n   * @param matcher - An index, an array with indices, a selector string, or an iteratee function.\n   */\n  function remove( matcher: SlideMatcher ): void {\n    removeNode( filter( matcher ).map( Slide => Slide.slide ) );\n    emit( EVENT_REFRESH );\n  }\n\n  /**\n   * Iterates over Slide objects by the iteratee function.\n   *\n   * @param iteratee      - An iteratee function that takes a Slide object, an index and an array with Slides.\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\n   */\n  function forEach( iteratee: SlidesIteratee, excludeClones?: boolean ): void {\n    get( excludeClones ).forEach( iteratee );\n  }\n\n  /**\n   * Filters Slides by the matcher\n   * that can be an index, an array with indices, a selector, or an predicate function.\n   *\n   * @param matcher - An index, an array with indices, a selector string, or an predicate function.\n   *\n   * @return An array with SlideComponent objects.\n   */\n  function filter( matcher: SlideMatcher ): SlideComponent[] {\n    return Slides.filter( isFunction( matcher )\n      ? matcher\n      : Slide => isString( matcher )\n        ? matches( Slide.slide, matcher )\n        : includes( toArray( matcher ), Slide.index )\n    );\n  }\n\n  /**\n   * Adds a CSS rule to all slides or containers.\n   *\n   * @param prop         - A property name.\n   * @param value        - A CSS value to add.\n   * @param useContainer - Optional. Determines whether to apply the rule to the container or not.\n   */\n  function rule( prop: string, value: string | number, useContainer?: boolean ): void {\n    forEach( Slide => { Slide.rule( prop, value, useContainer ) } );\n  }\n\n  /**\n   * Invokes the callback after all images in the element are loaded.\n   *\n   * @param elm      - An element that may contain images.\n   * @param callback - A callback function.\n   */\n  function observeImages( elm: Element, callback: AnyFunction ): void {\n    const images = queryAll( elm, 'img' );\n    let { length } = images;\n\n    if ( length ) {\n      images.forEach( img => {\n        bind( img, 'load error', () => {\n          if ( ! --length ) {\n            callback();\n          }\n        } );\n      } );\n    } else {\n      callback();\n    }\n  }\n\n  /**\n   * Returns the length of slides.\n   *\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\n   *\n   * @return The length of slides.\n   */\n  function getLength( excludeClones?: boolean ): number {\n    return excludeClones ? slides.length : Slides.length;\n  }\n\n  /**\n   * Checks if the number of slides is over than the `perPage` option, including clones.\n   *\n   * @return `true` if there are enough slides, or otherwise `false`.\n   */\n  function isEnough(): boolean {\n    return Slides.length > options.perPage;\n  }\n\n  return {\n    mount,\n    destroy,\n    register,\n    get,\n    getIn,\n    getAt,\n    add,\n    remove,\n    forEach,\n    filter,\n    rule,\n    getLength,\n    isEnough,\n  };\n}\n","import { EVENT_REFRESH, EVENT_RESIZE, EVENT_UPDATED } from '../../constants/events';\nimport { LOOP } from '../../constants/types';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { addClass, append, before, ceil, empty, push, rect, remove } from '../../utils';\nimport { pad } from '../../utils/string';\n\n\n/**\n * The interface for the Clone component.\n *\n * @since 3.0.0\n */\nexport interface CloneComponent extends BaseComponent {\n}\n\n/**\n * The component that generates clones for the loop slider.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Clones component object.\n */\nexport function Clones( Splide: Splide, Components: Components, options: Options ): CloneComponent {\n  const { on, emit } = EventInterface( Splide );\n  const { Elements, Slides } = Components;\n  const { resolve } = Components.Direction;\n  const clones: HTMLElement[] = [];\n\n  /**\n   * Keeps the current number of clones.\n   */\n  let cloneCount: number;\n\n  /**\n   * The index used for generating IDs.\n   */\n  let cloneIndex: number;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    init();\n    on( EVENT_REFRESH, refresh );\n    on( [ EVENT_UPDATED, EVENT_RESIZE ], observe );\n  }\n\n  /**\n   * Removes all clones if available, and generates new clones.\n   */\n  function init(): void {\n    if ( ( cloneCount = computeCloneCount() ) ) {\n      generate( cloneCount );\n    }\n  }\n\n  /**\n   * Destroys clones.\n   */\n  function destroy(): void {\n    remove( clones );\n    empty( clones );\n  }\n\n  /**\n   * Discards all clones and regenerates them.\n   * Must do this before the Elements component collects slide elements.\n   */\n  function refresh(): void {\n    destroy();\n    init();\n  }\n\n  /**\n   * Observes the required clone count and refreshes the slider if necessary.\n   */\n  function observe(): void {\n    if ( cloneCount !== computeCloneCount() ) {\n      emit( EVENT_REFRESH );\n    }\n  }\n\n  /**\n   * Generates the specified number of clones.\n   *\n   * @param count - The number of clones to generate for each side.\n   */\n  function generate( count: number ): void {\n    const slides = Slides.get().slice();\n    const { length } = slides;\n\n    if ( length ) {\n      cloneIndex = 0;\n\n      while ( slides.length < count ) {\n        push( slides, slides );\n      }\n\n      slides.slice( -count ).concat( slides.slice( 0, count ) ).forEach( ( Slide, index ) => {\n        const isHead = index < count;\n        const clone  = cloneDeep( Slide.slide );\n        isHead ? before( clone, slides[ 0 ].slide ) : append( Elements.list, clone );\n        push( clones, clone );\n        Slides.register( clone, index - count + ( isHead ? 0 : length ), Slide.index );\n      } );\n    }\n  }\n\n  /**\n   * Deeply clones the provided element with removing the ID attribute.\n   *\n   * @param elm - An element to clone.\n   *\n   * @return A cloned element.\n   */\n  function cloneDeep( elm: HTMLElement ): HTMLElement {\n    const clone = elm.cloneNode( true ) as HTMLElement;\n    addClass( clone, options.classes.clone );\n    clone.id = `${ Splide.root.id }-clone${ pad( ++cloneIndex ) }`;\n    return clone;\n  }\n\n  /**\n   * Returns the number of elements to generate.\n   * This always returns 0 if the slider type is not `'loop'`.\n   *\n   * @return The number of clones.\n   */\n  function computeCloneCount(): number {\n    let { clones } = options;\n\n    if ( ! Splide.is( LOOP ) ) {\n      clones = 0;\n    } else if ( ! clones ) {\n      const fixedSize  = options[ resolve( 'fixedWidth' ) ];\n      const fixedCount = fixedSize && ceil( rect( Elements.track )[ resolve( 'width' ) ] / fixedSize );\n      const baseCount  = fixedCount || ( options[ resolve( 'autoWidth' ) ] && Splide.length ) || options.perPage;\n\n      clones = baseCount * ( options.drag ? ( options.flickMaxPages || 1 ) + 1 : 2 );\n    }\n\n    return clones;\n  }\n\n  return {\n    mount,\n    destroy,\n  };\n}\n","import { TTB } from '../../constants/directions';\nimport { EVENT_REFRESH, EVENT_RESIZE, EVENT_RESIZED, EVENT_UPDATED } from '../../constants/events';\nimport { EventInterface, Throttle } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { abs, assert, isObject, rect, style, unit } from '../../utils';\n\n\n/**\n * The interface for the Layout component.\n *\n * @since 3.0.0\n */\nexport interface LayoutComponent extends BaseComponent {\n  listSize(): number;\n  slideSize( index: number, withoutGap?: boolean ): number;\n  sliderSize(): number;\n  totalSize( index?: number, withoutGap?: boolean ): number;\n  getPadding( right: boolean ): number;\n}\n\n/**\n * The component that layouts slider components and provides methods for dimensions.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return An Layout component object.\n */\nexport function Layout( Splide: Splide, Components: Components, options: Options ): LayoutComponent {\n  const { on, bind, emit } = EventInterface( Splide );\n  const { Slides } = Components;\n  const { ruleBy } = Components.Style;\n  const { resolve } = Components.Direction;\n  const { root, track, list } = Components.Elements;\n  const { getAt } = Slides;\n  const vertical = options.direction === TTB;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    init();\n\n    bind( window, 'resize load', Throttle( emit.bind( this, EVENT_RESIZE ) ) );\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], init );\n    on( EVENT_RESIZE, resize );\n  }\n\n  /**\n   * Initializes the component on `mount` or `updated`.\n   * Uses `max-width` for the root to prevent the slider from exceeding the parent element.\n   */\n  function init(): void {\n    ruleBy( root, 'maxWidth', unit( options.width ) );\n    ruleBy( track, resolve( 'paddingLeft' ), cssPadding( false ) );\n    ruleBy( track, resolve( 'paddingRight' ), cssPadding( true ) );\n\n    Slides.rule( resolve( 'marginRight' ), unit( options.gap ) );\n    Slides.rule( 'width', cssSlideWidth() );\n\n    setSlidesHeight();\n    resize();\n  }\n\n  /**\n   * Updates dimensions of some elements when the slider is resized.\n   */\n  function resize(): void {\n    ruleBy( track, 'height', cssTrackHeight() );\n    options.heightRatio && setSlidesHeight();\n    emit( EVENT_RESIZED );\n  }\n\n  /**\n   * Updates the height of slides or their container elements if available.\n   */\n  function setSlidesHeight(): void {\n    Slides.rule( 'height', cssSlideHeight(), true );\n  }\n\n  /**\n   * Parses the padding option and returns the value for each side.\n   * This method returns `paddingTop` or `paddingBottom` for the vertical slider.\n   *\n   * @param right - Determines whether to get `paddingRight/Bottom` or `paddingLeft/Top`.\n   *\n   * @return The padding value as a CSS string.\n   */\n  function cssPadding( right: boolean ): string {\n    const { padding } = options;\n    const prop = resolve( right ? 'right' : 'left', true );\n    return padding ? unit( padding[ prop ] || ( isObject( padding ) ? '0' : padding ) ) : '';\n  }\n\n  /**\n   * Returns the height of the track element as a CSS string.\n   *\n   * @return The height of the track.\n   */\n  function cssTrackHeight(): string {\n    let height = '';\n\n    if ( vertical ) {\n      height = cssHeight();\n      assert( height, '\"height\" or \"heightRatio\" is missing.' );\n\n      const paddingTop    = cssPadding( false );\n      const paddingBottom = cssPadding( true );\n\n      if ( paddingTop || paddingBottom ) {\n        height = `calc(${ height }`;\n        height += `${ paddingTop ? ` - ${ paddingTop }` : '' }${ paddingBottom ? ` - ${ paddingBottom }` : '' })`;\n      }\n    }\n\n    return height;\n  }\n\n  /**\n   * Converts options related with height to a CSS string.\n   *\n   * @return The height as a CSS string if available, or otherwise an empty string.\n   */\n  function cssHeight(): string {\n    return unit( options.height || rect( list ).width * options.heightRatio );\n  }\n\n  /**\n   * Returns the width of the slide as a CSS string.\n   *\n   * @return The width of the slide.\n   */\n  function cssSlideWidth(): string {\n    return options.autoWidth ? '' : unit( options.fixedWidth ) || ( vertical ? '' : cssSlideSize() );\n  }\n\n  /**\n   * Returns the height of the slide as a CSS string.\n   *\n   * @return The height of the slide.\n   */\n  function cssSlideHeight(): string {\n    return unit( options.fixedHeight )\n      || ( vertical ? ( options.autoHeight ? '' : cssSlideSize() ) : cssHeight() );\n  }\n\n  /**\n   * Returns the CSS string for slide width or height without gap.\n   *\n   * @return The CSS string for slide width or height.\n   */\n  function cssSlideSize(): string {\n    const gap = unit( options.gap );\n    return `calc((100%${ gap && ` + ${ gap }` })/${ options.perPage || 1 }${ gap && ` - ${ gap }` })`;\n  }\n\n  /**\n   * Returns the list width for the horizontal slider, or the height for the vertical slider.\n   *\n   * @return The size of the track element in pixel.\n   */\n  function listSize(): number {\n    return rect( list )[ resolve( 'width' ) ];\n  }\n\n  /**\n   * Returns the slide width for the horizontal slider, or the height for the vertical slider.\n   *\n   * @param index      - Optional. A slide index.\n   * @param withoutGap - Optional. Determines whether to exclude the gap amount or not.\n   *\n   * @return The size of the specified slide element in pixel.\n   */\n  function slideSize( index?: number, withoutGap?: boolean ): number {\n    const Slide = getAt( index || 0 );\n    return Slide\n      ? rect( Slide.slide )[ resolve( 'width' ) ] + ( withoutGap ? 0 : getGap() )\n      : 0;\n  }\n\n  /**\n   * Returns the total width or height of slides from 0 to the specified index.\n   *\n   * @param index      - A slide index. If omitted, uses the last index.\n   * @param withoutGap - Optional. Determines whether to exclude the last gap or not.\n   *\n   * @return The total width of slides in the horizontal slider, or the height in the vertical one.\n   */\n  function totalSize( index: number, withoutGap?: boolean ): number {\n    const Slide = getAt( index );\n\n    if ( Slide ) {\n      const right = rect( Slide.slide )[ resolve( 'right' ) ];\n      const left  = rect( list )[ resolve( 'left' ) ];\n      return abs( right - left ) + ( withoutGap ? 0 : getGap() );\n    }\n\n    return 0;\n  }\n\n  /**\n   * Returns the slider size without clones.\n   *\n   * @return The slider size.\n   */\n  function sliderSize(): number {\n    const firstSlide = getAt( 0 );\n    const lastSlide  = getAt( Slides.getLength( true ) - 1 );\n\n    if ( firstSlide && lastSlide ) {\n      return rect( lastSlide.slide )[ resolve( 'right' ) ] - rect( firstSlide.slide )[ resolve( 'left' ) ];\n    }\n\n    return 0;\n  }\n\n  /**\n   * Returns the gap value.\n   *\n   *\n   * @return The gap value in pixel.\n   */\n  function getGap(): number {\n    const Slide = getAt( 0 );\n    return Slide ? parseFloat( style( Slide.slide, resolve( 'marginRight' ) ) ) || 0 : 0;\n  }\n\n  /**\n   * Returns the padding value.\n   *\n   * @param right - Determines whether to get `paddingRight/Bottom` or `paddingLeft/Top`.\n   *\n   * @return The padding value in pixel.\n   */\n  function getPadding( right: boolean ): number {\n    return parseFloat( style( track, resolve( `padding${ right ? 'Right' : 'Left' }`, true ) ) ) || 0;\n  }\n\n  return {\n    mount,\n    listSize,\n    slideSize,\n    sliderSize,\n    totalSize,\n    getPadding,\n  };\n}\n","import { EVENT_MOVE, EVENT_MOVED, EVENT_REFRESH, EVENT_RESIZE, EVENT_UPDATED } from '../../constants/events';\nimport { IDLE, MOVING } from '../../constants/states';\nimport { LOOP, SLIDE } from '../../constants/types';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { abs, clamp, rect } from '../../utils';\n\n\n/**\n * The interface for the Move component.\n *\n * @since 3.0.0\n */\nexport interface MoveComponent extends BaseComponent {\n  move( dest: number, index: number, prev: number ): void;\n  jump( index: number ): void;\n  translate( position: number ): void;\n  cancel(): void;\n  toIndex( position: number ): number;\n  toPosition( index: number, trimming?: boolean ): number;\n  getPosition(): number;\n  getLimit( max: boolean ): number;\n  isBusy(): boolean;\n  isExceeded(): boolean;\n  isExceededMin( position: number, offset?: number ): boolean;\n  isExceededMax( position: number, offset?: number ): boolean;\n}\n\n/**\n * The component for moving the slider.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Move component object.\n */\nexport function Move( Splide: Splide, Components: Components, options: Options ): MoveComponent {\n  const { on, emit } = EventInterface( Splide );\n  const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components.Layout;\n  const { resolve, orient } = Components.Direction;\n  const { list, track } = Components.Elements;\n\n  /**\n   * Indicates whether the slider is just looping or not.\n   */\n  let looping: boolean;\n\n  /**\n   * Indicates whether the component can move the slider or not.\n   */\n  let waiting: boolean;\n\n  /**\n   * Keeps the current position.\n   */\n  let currPosition = 0;\n\n  /**\n   * Keeps the rate of position to the slider width.\n   */\n  let positionRate = 0;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    on( [ EVENT_RESIZE, EVENT_UPDATED, EVENT_REFRESH ], reposition );\n  }\n\n  /**\n   * Repositions the slider.\n   */\n  function reposition(): void {\n    if ( options.drag !== 'free' ) {\n      jump( Splide.index );\n    } else {\n      if ( ! options[ resolve( 'fixedWidth' ) ] && ! options[ resolve( 'autoWidth' ) ] ) {\n        translate( listSize() * positionRate );\n      }\n\n      if ( isExceededMax( currPosition ) ) {\n        translate( getLimit( true ) );\n      }\n    }\n  }\n\n  /**\n   * Goes to the slide at the specified index with the Transition component.\n   *\n   * @param dest  - A destination index to go to.\n   * @param index - A slide index.\n   * @param prev  - A previous index.\n   */\n  function move( dest: number, index: number, prev: number ): void {\n    if ( ! isBusy() ) {\n      const position = getPosition();\n\n      looping = dest !== index;\n      waiting = options.waitForTransition;\n\n      Splide.state.set( MOVING );\n      emit( EVENT_MOVE, index, prev, dest );\n\n      Components.Transition.start( dest, () => {\n        onMoved( dest, index, prev, position );\n      } );\n    }\n  }\n\n  /**\n   * Called after the transition ends.\n   *\n   * @param dest        - A destination index to go to.\n   * @param index       - A slide index.\n   * @param prev        - A previous index.\n   * @param oldPosition - An old position.\n   */\n  function onMoved( dest: number, index: number, prev: number, oldPosition: number ) {\n    if ( looping ) {\n      jump( index );\n      looping = false;\n    }\n\n    waiting = false;\n    Splide.state.set( IDLE );\n    emit( EVENT_MOVED, index, prev, dest );\n\n    if ( options.trimSpace === 'move' && dest !== prev && oldPosition === getPosition() ) {\n      Components.Controller.go( dest > prev ? '>' : '<' );\n    }\n  }\n\n  /**\n   * Jumps to the slide at the specified index.\n   *\n   * @param index - An index to jump to.\n   */\n  function jump( index: number ): void {\n    translate( toPosition( index, true ) );\n  }\n\n  /**\n   * Moves the slider to the specified position.\n   *\n   * @param position - The destination.\n   */\n  function translate( position: number ): void {\n    currPosition = loop( position );\n    positionRate = currPosition / listSize();\n    Components.Style.ruleBy( list, 'transform', `translate${ resolve( 'X' ) }(${ currPosition }px)` );\n  }\n\n  /**\n   * Loops the provided position if it exceeds limits.\n   *\n   * @param position - A position to loop.\n   */\n  function loop( position: number ): number {\n    if ( ! looping && Splide.is( LOOP ) ) {\n      const diff        = position - currPosition;\n      const exceededMin = isExceededMin( position );\n      const exceededMax = isExceededMax( position );\n\n      if ( ( exceededMin && diff > 0 ) || ( exceededMax && diff < 0 ) ) {\n        position += orient( sliderSize() * ( exceededMin ? 1 : -1 ) );\n      }\n    }\n\n    return position;\n  }\n\n  /**\n   * Cancels transition.\n   */\n  function cancel(): void {\n    translate( getPosition() );\n    Components.Transition.cancel();\n  }\n\n  /**\n   * Returns the closest index to the position.\n   *\n   * @param position - A position to convert.\n   *\n   * @return The closest index to the position.\n   */\n  function toIndex( position: number ): number {\n    const Slides = Components.Slides.get();\n\n    let index       = 0;\n    let minDistance = Infinity;\n\n    for ( let i = 0; i < Slides.length; i++ ) {\n      const slideIndex = Slides[ i ].index;\n      const distance   = abs( toPosition( slideIndex ) - position );\n\n      if ( distance < minDistance ) {\n        minDistance = distance;\n        index       = slideIndex;\n      } else {\n        break;\n      }\n    }\n\n    return index;\n  }\n\n  /**\n   * Converts the slide index to the position.\n   *\n   * @param index    - An index to convert.\n   * @param trimming - Optional. Whether to trim edge spaces or not.\n   *\n   * @return The position corresponding with the index.\n   */\n  function toPosition( index: number, trimming?: boolean ): number {\n    const position = orient( totalSize( index - 1 ) - offset( index ) );\n    return trimming ? trim( position ) : position;\n  }\n\n  /**\n   * Returns the current position.\n   *\n   * @return The position of the list element.\n   */\n  function getPosition(): number {\n    const left = resolve( 'left' );\n    return rect( list )[ left ] - rect( track )[ left ] + orient( getPadding( false ) );\n  }\n\n  /**\n   * Trims spaces on the edge of the slider.\n   *\n   * @param position - A position to trim.\n   *\n   * @return A trimmed position.\n   */\n  function trim( position: number ): number {\n    if ( options.trimSpace && Splide.is( SLIDE ) ) {\n      position = clamp( position, 0, orient( sliderSize() - listSize() ) );\n    }\n\n    return position;\n  }\n\n  /**\n   * Returns the offset amount.\n   *\n   * @param index - An index.\n   */\n  function offset( index: number ): number {\n    const { focus } = options;\n\n    if ( focus === 'center' ) {\n      return ( listSize() - slideSize( index, true ) ) / 2;\n    }\n\n    return ( +focus || 0 ) * slideSize( index );\n  }\n\n  /**\n   * Returns the limit number that the slider can move to.\n   *\n   * @param max - Determines whether to return the maximum or minimum limit.\n   *\n   * @return The border number.\n   */\n  function getLimit( max: boolean ): number {\n    const trimming = !! options.trimSpace;\n    return max ? toPosition( Components.Controller.getEnd(), trimming ) : toPosition( 0, trimming );\n  }\n\n  /**\n   * Checks if the slider can move now or not.\n   *\n   * @return `true` if the slider can move, or otherwise `false`.\n   */\n  function isBusy(): boolean {\n    return !! ( looping || waiting );\n  }\n\n  /**\n   * Checks if the provided position exceeds the minimum limit or not.\n   *\n   * @param position - A position to test.\n   * @param offset   - Optional. Offsets the limit in pixel.\n   *\n   * @return `true` if the position exceeds the limit, or otherwise `false`.\n   */\n  function isExceededMin( position: number, offset?: number ): boolean {\n    return orient( position ) + ( offset || 0 ) < orient( getLimit( false ) );\n  }\n\n  /**\n   * Checks if the provided position exceeds the maximum limit or not.\n   *\n   * @param position - A position to test.\n   * @param offset   - Optional. Offsets the limit in pixel.\n   *\n   * @return `true` if the position exceeds the limit, or otherwise `false`.\n   */\n  function isExceededMax( position: number, offset?: number ): boolean {\n    return orient( position ) + ( offset || 0 ) > orient( getLimit( true ) );\n  }\n\n  /**\n   * Checks if the slider position exceeds borders or not.\n   *\n   * @return `true` if the position is over borders, or otherwise `false`.\n   */\n  function isExceeded(): boolean {\n    return isExceededMin( currPosition ) || isExceededMax( currPosition );\n  }\n\n  return {\n    mount,\n    move,\n    jump,\n    translate,\n    cancel,\n    toIndex,\n    toPosition,\n    getPosition,\n    getLimit,\n    isBusy,\n    isExceededMin,\n    isExceededMax,\n    isExceeded,\n  };\n}\n","import { EVENT_REFRESH, EVENT_SCROLLED, EVENT_UPDATED } from '../../constants/events';\nimport { LOOP } from '../../constants/types';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { between, clamp, floor, isString, isUndefined, max } from '../../utils';\n\n\n/**\n * The interface for the Controller component.\n *\n * @since 3.0.0\n */\nexport interface ControllerComponent extends BaseComponent {\n  go( control: number | string, allowSameIndex?: boolean ): void;\n  getNext( destination?: boolean ): number;\n  getPrev( destination?: boolean ): number;\n  getEnd(): number;\n  setIndex( index: number ): void;\n  getIndex( prev?: boolean ): number;\n  toIndex( page: number ): number;\n  toPage( index: number ): number;\n  hasFocus(): boolean;\n}\n\n/**\n * The component for controlling the slider.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Controller component object.\n */\nexport function Controller( Splide: Splide, Components: Components, options: Options ): ControllerComponent {\n  const { on } = EventInterface( Splide );\n  const { Move } = Components;\n  const { isEnough, getLength } = Components.Slides;\n  const isLoop = Splide.is( LOOP );\n\n  /**\n   * The current index.\n   */\n  let currIndex = options.start || 0;\n\n  /**\n   * The previous index.\n   */\n  let prevIndex = currIndex;\n\n  /**\n   * The latest number of slides.\n   */\n  let slideCount: number;\n\n  /**\n   * The latest `perMove` value.\n   */\n  let perMove: number;\n\n  /**\n   * The latest `perMove` value.\n   */\n  let perPage: number;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    init();\n    Move.jump( currIndex );\n\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], init );\n\n    on( EVENT_SCROLLED, () => {\n      setIndex( Move.toIndex( Move.getPosition() ) );\n    }, 0 );\n  }\n\n  /**\n   * Initializes the component.\n   */\n  function init(): void {\n    slideCount = getLength( true );\n    perMove    = options.perMove;\n    perPage    = options.perPage;\n  }\n\n  /**\n   * Moves the slider by the control pattern.\n   *\n   * @see `Splide#go()`\n   *\n   * @param control        - A control pattern.\n   * @param allowSameIndex - Optional. Determines whether to allow to go to the current index or not.\n   */\n  function go( control: number | string, allowSameIndex?: boolean ): void {\n    const dest  = parse( control );\n    const index = loop( dest );\n\n    if ( index > -1 && ! Move.isBusy() && ( allowSameIndex || index !== currIndex ) ) {\n      setIndex( index );\n      Move.move( dest, index, prevIndex );\n    }\n  }\n\n  /**\n   * Parses the control and returns a slide index.\n   *\n   * @param control - A control pattern to parse.\n   */\n  function parse( control: number | string ): number {\n    let index = currIndex;\n\n    if ( isString( control ) ) {\n      const [ , indicator, number ] = control.match( /([+\\-<>])(\\d+)?/ ) || [];\n\n      if ( indicator === '+' || indicator === '-' ) {\n        index = computeDestIndex( currIndex + +`${ indicator }${ +number || 1 }`, currIndex, true );\n      } else if ( indicator === '>' ) {\n        index = number ? toIndex( +number ) : getNext( true );\n      } else if ( indicator === '<' ) {\n        index = getPrev( true );\n      }\n    } else {\n      if ( isLoop ) {\n        index = clamp( control, -perPage, slideCount + perPage - 1 );\n      } else {\n        index = clamp( control, 0, getEnd() );\n      }\n    }\n\n    return index;\n  }\n\n  /**\n   * Returns a next destination index.\n   *\n   * @param destination - Optional. Determines whether to get a destination index or a slide one.\n   *\n   * @return A next index if available, or otherwise `-1`.\n   */\n  function getNext( destination?: boolean ): number {\n    return getAdjacent( false, destination );\n  }\n\n  /**\n   * Returns a previous destination index.\n   *\n   * @param destination - Optional. Determines whether to get a destination index or a slide one.\n   *\n   * @return A previous index if available, or otherwise `-1`.\n   */\n  function getPrev( destination?: boolean ): number {\n    return getAdjacent( true, destination );\n  }\n\n  /**\n   * Returns an adjacent destination index.\n   *\n   * @param prev        - Determines whether to return a previous or next index.\n   * @param destination - Optional. Determines whether to get a destination index or a slide one.\n   *\n   * @return An adjacent index if available, or otherwise `-1`.\n   */\n  function getAdjacent( prev: boolean, destination?: boolean ): number {\n    const dest = computeDestIndex( currIndex + getPerMove() * ( prev ? -1 : 1 ), currIndex );\n    return destination ? dest : loop( dest );\n  }\n\n  /**\n   * Converts the desired destination index to the valid one.\n   * - This may return clone indices if the editor is the loop mode,\n   *   or `-1` if there is no slide to go.\n   * - There are still slides where the slider can go if borders are between `from` and `dest`.\n   *\n   * @param dest        - The desired destination.\n   * @param from        - A base index.\n   * @param incremental - Optional. Whether the control is incremental or not.\n   *\n   * @return A converted destination index, including clones.\n   */\n  function computeDestIndex( dest: number, from: number, incremental?: boolean ): number {\n    if ( isEnough() ) {\n      const end = getEnd();\n\n      // Will overrun:\n      if ( dest < 0 || dest > end ) {\n        if ( between( 0, dest, from, true ) || between( end, from, dest, true ) ) {\n          dest = toIndex( toPage( dest ) );\n        } else {\n          if ( isLoop ) {\n            dest = perMove\n              ? dest\n              : dest < 0 ? - ( slideCount % perPage || perPage ) : slideCount;\n          } else if ( options.rewind ) {\n            dest = dest < 0 ? end : 0;\n          } else {\n            dest = -1;\n          }\n        }\n      } else {\n        if ( ! isLoop && ! incremental && dest !== from ) {\n          dest = toIndex( toPage( from ) + ( dest < from ? -1 : 1 ) );\n        }\n      }\n    } else {\n      dest = -1;\n    }\n\n    return dest;\n  }\n\n  /**\n   * Returns the end index where the slider can go.\n   * For example, if the slider has 10 slides and the `perPage` option is 3,\n   * the slider can go to the slide 8 (the index is 7).\n   *\n   * @return An end index.\n   */\n  function getEnd(): number {\n    let end = slideCount - perPage;\n\n    if ( hasFocus() || ( isLoop && perMove ) ) {\n      end = slideCount - 1;\n    }\n\n    return max( end, 0 );\n  }\n\n  /**\n   * Loops the provided index only in the loop mode.\n   *\n   * @param index - An index to loop.\n   *\n   * @return A looped index.\n   */\n  function loop( index: number ): number {\n    if ( isLoop ) {\n      return isEnough() ? index % slideCount + ( index < 0 ? slideCount : 0 ) : -1;\n    }\n\n    return index;\n  }\n\n  /**\n   * Converts the page index to the slide index.\n   *\n   * @param page - A page index to convert.\n   *\n   * @return A slide index.\n   */\n  function toIndex( page: number ): number {\n    return clamp( hasFocus() ? page : perPage * page, 0, getEnd() );\n  }\n\n  /**\n   * Converts the slide index to the page index.\n   *\n   * @param index - An index to convert.\n   */\n  function toPage( index: number ): number {\n    if ( ! hasFocus() ) {\n      index = between( index, slideCount - perPage, slideCount - 1 ) ? slideCount - 1 : index;\n      index = floor( index / perPage );\n    }\n\n    return index;\n  }\n\n  /**\n   * Returns the number of slides to move for '>' and '<'.\n   *\n   * @return The number of slides to move.\n   */\n  function getPerMove(): number {\n    return perMove || hasFocus() ? 1 : perPage;\n  }\n\n  /**\n   * Sets a new index and retains old one.\n   *\n   * @param index - A new index to set.\n   */\n  function setIndex( index: number ): void {\n    if ( index !== currIndex ) {\n      prevIndex = currIndex;\n      currIndex = index;\n    }\n  }\n\n  /**\n   * Returns the current/previous index slide index.\n   *\n   * @param prev - Optional. Whether to return previous index or not.\n   */\n  function getIndex( prev?: boolean ): number {\n    return prev ? prevIndex : currIndex;\n  }\n\n  /**\n   * Verifies if the focus option is available or not.\n   *\n   * @return `true` if the slider has the focus option.\n   */\n  function hasFocus(): boolean {\n    return ! isUndefined( options.focus ) || options.isNavigation;\n  }\n\n  return {\n    mount,\n    go,\n    getNext,\n    getPrev,\n    getEnd,\n    setIndex,\n    getIndex,\n    toIndex,\n    toPage,\n    hasFocus,\n  };\n}\n","/**\n * The namespace for SVG elements.\n */\nexport const XML_NAME_SPACE = 'http://www.w3.org/2000/svg';\n\n/**\n * The arrow path.\n */\nexport const PATH = 'm15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z';\n\n/**\n * SVG width and height.\n */\nexport const SIZE = 40;\n","import { ALL_ATTRIBUTES, ARIA_CONTROLS, ARIA_LABEL } from '../../constants/attributes';\nimport {\n  EVENT_ARROWS_MOUNTED,\n  EVENT_ARROWS_UPDATED,\n  EVENT_MOUNTED,\n  EVENT_MOVE,\n  EVENT_REFRESH,\n  EVENT_SCROLLED,\n  EVENT_UPDATED,\n} from '../../constants/events';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { append, before, child, create, display, parseHtml, remove, removeAttribute, setAttribute } from '../../utils';\nimport { PATH, SIZE, XML_NAME_SPACE } from './path';\n\n\n/**\n * The interface for the Arrows component.\n *\n * @since 3.0.0\n */\nexport interface ArrowsComponent extends BaseComponent {\n  arrows: { prev?: HTMLButtonElement, next?: HTMLButtonElement };\n}\n\n/**\n * The component for handling previous and next arrows.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return An Arrows component object.\n */\nexport function Arrows( Splide: Splide, Components: Components, options: Options ): ArrowsComponent {\n  const { on, bind, emit } = EventInterface( Splide );\n  const { classes, i18n } = options;\n  const { Elements, Controller } = Components;\n  const { slider, track } = Elements;\n\n  /**\n   * The wrapper element.\n   */\n  let wrapper = Elements.arrows;\n\n  /**\n   * The previous arrow element.\n   */\n  let prev = Elements.prev;\n\n  /**\n   * The next arrow element.\n   */\n  let next = Elements.next;\n\n  /**\n   * Indicates whether the component creates arrows or retrieved from the DOM.\n   */\n  let created: boolean;\n\n  /**\n   * An object with previous and next arrows.\n   */\n  const arrows: ArrowsComponent[ 'arrows' ] = {};\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    init();\n    on( EVENT_UPDATED, init );\n  }\n\n  /**\n   * Initializes the component.\n   */\n  function init(): void {\n    if ( options.arrows ) {\n      if ( ! prev || ! next ) {\n        createArrows();\n      }\n    }\n\n    if ( prev && next ) {\n      if ( ! arrows.prev ) {\n        setAttribute( prev, ARIA_CONTROLS, track.id );\n        setAttribute( next, ARIA_CONTROLS, track.id );\n\n        arrows.prev = prev;\n        arrows.next = next;\n\n        listen();\n\n        emit( EVENT_ARROWS_MOUNTED, prev, next );\n      } else {\n        display( wrapper, options.arrows === false ? 'none' : '' );\n      }\n    }\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    if ( created ) {\n      remove( wrapper );\n    } else {\n      removeAttribute( prev, ALL_ATTRIBUTES );\n      removeAttribute( next, ALL_ATTRIBUTES );\n    }\n  }\n\n  /**\n   * Listens to some events.\n   */\n  function listen(): void {\n    const { go } = Controller;\n    on( [ EVENT_MOUNTED, EVENT_MOVE, EVENT_UPDATED, EVENT_REFRESH, EVENT_SCROLLED ], update );\n    bind( next, 'click', () => { go( '>' ) } );\n    bind( prev, 'click', () => { go( '<' ) } );\n  }\n\n  /**\n   * Create arrows and append them to the slider.\n   */\n  function createArrows(): void {\n    const parent = options.arrows === 'slider' && slider ? slider : Splide.root;\n\n    wrapper = create( 'div', classes.arrows );\n    prev    = createArrow( true );\n    next    = createArrow( false );\n    created = true;\n\n    append( wrapper, [ prev, next ] );\n    before( wrapper, child( parent ) );\n  }\n\n  /**\n   * Creates an arrow button.\n   *\n   * @param prev - Determines whether to create a previous or next arrow.\n   *\n   * @return A created button element.\n   */\n  function createArrow( prev: boolean ): HTMLButtonElement {\n    const arrow = `<button class=\"${ classes.arrow } ${ prev ? classes.prev : classes.next }\" type=\"button\">`\n      +\t`<svg xmlns=\"${ XML_NAME_SPACE }\" viewBox=\"0 0 ${ SIZE } ${ SIZE }\" width=\"${ SIZE }\" height=\"${ SIZE }\">`\n      + `<path d=\"${ options.arrowPath || PATH }\" />`;\n\n    return parseHtml<HTMLButtonElement>( arrow );\n  }\n\n  /**\n   * Updates status of arrows, such as `disabled` and `aria-label`.\n   */\n  function update(): void {\n    const index     = Splide.index;\n    const prevIndex = Controller.getPrev();\n    const nextIndex = Controller.getNext();\n    const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n    const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n\n    prev.disabled = prevIndex < 0;\n    next.disabled = nextIndex < 0;\n\n    setAttribute( prev, ARIA_LABEL, prevLabel );\n    setAttribute( next, ARIA_LABEL, nextLabel );\n\n    emit( EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex );\n  }\n\n  return {\n    arrows,\n    mount,\n    destroy,\n  };\n}\n","import { ARIA_CONTROLS, ARIA_LABEL, ROLE } from '../../constants/attributes';\nimport {\n  EVENT_AUTOPLAY_PAUSE,\n  EVENT_AUTOPLAY_PLAY,\n  EVENT_AUTOPLAY_PLAYING,\n  EVENT_MOVE,\n  EVENT_REFRESH,\n  EVENT_SCROLL,\n} from '../../constants/events';\nimport { EventInterface, RequestInterval } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { isHTMLButtonElement, setAttribute, style } from '../../utils';\n\n\n/**\n * The interface for the Autoplay component.\n *\n * @since 3.0.0\n */\nexport interface AutoplayComponent extends BaseComponent {\n  play(): void;\n  pause(): void;\n  isPaused(): boolean;\n}\n\n/**\n * The component for auto playing sliders.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return An Autoplay component object.\n */\nexport function Autoplay( Splide: Splide, Components: Components, options: Options ): AutoplayComponent {\n  const { on, bind, emit } = EventInterface( Splide );\n  const { root, track, bar, play: playButton, pause: pauseButton } = Components.Elements;\n  const interval = RequestInterval( options.interval, Splide.go.bind( Splide, '>' ), update );\n  const { isPaused } = interval;\n\n  /**\n   * Indicates whether the slider is hovered or not.\n   */\n  let hovered: boolean;\n\n  /**\n   * Indicates whether one of slider elements has focus or not.\n   */\n  let focused: boolean;\n\n  /**\n   * Turns into `true` when autoplay is manually paused.\n   */\n  let paused: boolean;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    const { autoplay } = options;\n\n    if ( autoplay ) {\n      initButton( true );\n      initButton( false );\n      listen();\n\n      if ( autoplay !== 'pause' ) {\n        play();\n      }\n    }\n  }\n\n  /**\n   * Initializes a play/pause button.\n   *\n   * @param forPause - Determines whether to initialize a pause or play button.\n   */\n  function initButton( forPause: boolean ): void {\n    const button = forPause ? pauseButton : playButton;\n\n    if ( button ) {\n      if ( ! isHTMLButtonElement( button ) ) {\n        setAttribute( button, ROLE, 'button' );\n      }\n\n      setAttribute( button, ARIA_CONTROLS, track.id );\n      setAttribute( button, ARIA_LABEL, options.i18n[ forPause ? 'pause' : 'play' ] );\n\n      bind( button, 'click', forPause ? pause : play );\n    }\n  }\n\n  /**\n   * Listens to some events.\n   */\n  function listen(): void {\n    if ( options.pauseOnHover ) {\n      bind( root, 'mouseenter mouseleave', e => {\n        hovered = e.type === 'mouseenter';\n        autoToggle();\n      } );\n    }\n\n    if ( options.pauseOnFocus ) {\n      bind( root, 'focusin focusout', e => {\n        focused = e.type === 'focusin';\n        autoToggle();\n      } );\n    }\n\n    on( [ EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH ], interval.rewind );\n  }\n\n  /**\n   * Starts autoplay and clears all flags.\n   */\n  function play(): void {\n    if ( isPaused() && Components.Slides.isEnough() ) {\n      interval.start( ! options.resetProgress );\n      focused = false;\n      hovered = false;\n      emit( EVENT_AUTOPLAY_PLAY );\n    }\n  }\n\n  /**\n   * Pauses autoplay.\n   *\n   * @param manual - If `true`, autoplay keeps paused until `play()` is explicitly called.\n   */\n  function pause( manual = true ): void {\n    if ( ! isPaused() ) {\n      interval.pause();\n      emit( EVENT_AUTOPLAY_PAUSE );\n    }\n\n    paused = manual;\n  }\n\n  /**\n   * Toggles play/pause according to current flags.\n   * If autoplay is manually paused, this will do nothing.\n   */\n  function autoToggle(): void {\n    if ( ! paused ) {\n      if ( ! hovered && ! focused ) {\n        play();\n      } else {\n        pause( false );\n      }\n    }\n  }\n\n  /**\n   * Called on every animation frame when auto playing.\n   *\n   * @param rate - The progress rate between 0 to 1.\n   */\n  function update( rate: number ): void {\n    emit( EVENT_AUTOPLAY_PLAYING, rate );\n\n    if ( bar ) {\n      style( bar, { width: `${ rate * 100 }%` } );\n    }\n  }\n\n  return {\n    mount,\n    destroy: interval.cancel,\n    play,\n    pause,\n    isPaused,\n  };\n}\n","import { EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { child, display } from '../../utils';\nimport { SlideComponent } from '../Slides/Slide';\n\n\n/**\n * The interface for the Cover component.\n *\n * @since 3.0.0\n */\nexport interface CoverComponent extends BaseComponent {\n}\n\n/**\n * The component for setting the image as the slide background.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Cover component object.\n */\nexport function Cover( Splide: Splide, Components: Components, options: Options ): CoverComponent {\n  const { on } = EventInterface( Splide );\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    if ( options.cover ) {\n      on( EVENT_LAZYLOAD_LOADED, ( img, Slide ) => { toggle( true, img, Slide ) } );\n      on( [ EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH ], apply.bind( null, true ) );\n    }\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    apply( false );\n  }\n\n  /**\n   * Sets/removes the background image to/from all slides.\n   *\n   * @param cover - If `false`, removes the background image.\n   */\n  function apply( cover: boolean ): void {\n    Components.Slides.forEach( Slide => {\n      const img = child<HTMLImageElement>( Slide.container || Slide.slide, 'img' );\n\n      if ( img && img.src ) {\n        toggle( cover, img, Slide );\n      }\n    } );\n  }\n\n  /**\n   * Sets/removes the background image to/from the parent element.\n   *\n   * @param cover - If `false`, removes the background image.\n   * @param img   - A target image element.\n   * @param Slide - A SlideComponent object where the image belongs.\n   */\n  function toggle( cover: boolean, img: HTMLImageElement, Slide: SlideComponent ): void {\n    Slide.rule( 'background', cover ? `center/cover no-repeat url(\"${ img.src }\")` : '', true );\n    display( img, cover ? 'none' : '' );\n  }\n\n  return {\n    mount,\n    destroy,\n  };\n}\n","/**\n * Triggers the bounce effect when the diff becomes less than this value.\n *\n * @since 3.0.0\n */\nexport const BOUNCE_DIFF_THRESHOLD = 10;\n\n/**\n * The duration of the bounce effect.\n *\n * @since 3.0.0\n */\nexport const BOUNCE_DURATION = 600;\n\n/**\n * The friction factor.\n *\n * @since 3.0.0\n */\nexport const FRICTION_FACTOR = 0.6;\n\n/**\n * The velocity to calculate the scroll duration.\n *\n * @since 3.0.0\n */\nexport const BASE_VELOCITY = 1.2;\n\n/**\n * The minimum duration of scroll.\n *\n * @since 3.0.0\n */\nexport const MIN_DURATION = 800;\n","import { EVENT_MOVE, EVENT_REFRESH, EVENT_SCROLL, EVENT_SCROLLED, EVENT_UPDATED } from '../../constants/events';\nimport { SLIDE } from '../../constants/types';\nimport { EventInterface, RequestInterval, RequestIntervalInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { abs, max } from '../../utils';\nimport { BASE_VELOCITY, BOUNCE_DIFF_THRESHOLD, BOUNCE_DURATION, FRICTION_FACTOR, MIN_DURATION } from './constants';\n\n\n/**\n * The interface for the Scroll component.\n *\n * @since 3.0.0\n */\nexport interface ScrollComponent extends BaseComponent {\n  scroll( position: number, duration?: number ): void;\n  cancel(): void;\n}\n\n/**\n * The component for scrolling the slider.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Scroll component object.\n */\nexport function Scroll( Splide: Splide, Components: Components, options: Options ): ScrollComponent {\n  const { on, emit } = EventInterface( Splide );\n  const { Move } = Components;\n  const { getPosition, getLimit } = Move;\n\n  /**\n   * Retains the active RequestInterval object.\n   */\n  let interval: RequestIntervalInterface;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    on( EVENT_MOVE, clear );\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], cancel );\n  }\n\n  /**\n   * Scrolls the slider to the provided destination.\n   *\n   * @param destination        - The destination to scroll to.\n   * @param duration           - Optional. The scroll duration. If omitted, calculates it by the distance.\n   * @param suppressConstraint - Optional. Whether to suppress constraint process when the slider exceeds bounds.\n   */\n  function scroll( destination: number, duration?: number, suppressConstraint?: boolean ): void {\n    const start = getPosition();\n    let friction = 1;\n\n    duration = duration || computeDuration( abs( destination - start ) );\n    clear();\n\n    interval = RequestInterval( duration, onScrolled, rate => {\n      const position = getPosition();\n      const target   = start + ( destination - start ) * easing( rate );\n      const diff     = ( target - getPosition() ) * friction;\n\n      Move.translate( position + diff );\n\n      if ( Splide.is( SLIDE ) && ! suppressConstraint && Move.isExceeded() ) {\n        friction *= FRICTION_FACTOR;\n\n        if ( abs( diff ) < BOUNCE_DIFF_THRESHOLD ) {\n          bounce( Move.isExceededMin( getPosition() ) );\n        }\n      }\n    }, 1 );\n\n    emit( EVENT_SCROLL );\n    interval.start();\n  }\n\n  /**\n   * Triggers the bounce effect when the slider reaches bounds.\n   *\n   * @param backwards - The direction the slider is going towards.\n   */\n  function bounce( backwards: boolean ): void {\n    scroll( getLimit( ! backwards ), BOUNCE_DURATION, true );\n  }\n\n  /**\n   * Called when scroll ends or is canceled.\n   */\n  function onScrolled(): void {\n    emit( EVENT_SCROLLED );\n  }\n\n  /**\n   * Computes the scroll duration by the distance and the base velocity.\n   *\n   * @param distance - Distance in pixel.\n   *\n   * @return The duration for scroll.\n   */\n  function computeDuration( distance: number ): number {\n    return max( distance / BASE_VELOCITY, MIN_DURATION );\n  }\n\n  /**\n   * Clears the active interval.\n   */\n  function clear(): void {\n    if ( interval ) {\n      interval.cancel();\n    }\n  }\n\n  /**\n   * Cancels the active interval and emits the `scrolled` event.\n   */\n  function cancel(): void {\n    if ( interval && ! interval.isPaused() ) {\n      clear();\n      onScrolled();\n    }\n  }\n\n  /**\n   * The easing function.\n   *\n   * @param t - A value to ease.\n   *\n   * @return An eased value.\n   */\n  function easing( t: number ): number {\n    const { easingFunc } = options;\n    return easingFunc ? easingFunc( t ) : 1 - Math.pow( 1 - t, 4 );\n  }\n\n  return {\n    mount,\n    destroy: clear,\n    scroll,\n    cancel,\n  };\n}\n","/**\n * The power of the friction.\n *\n * @since 3.0.0\n */\nexport const FRICTION = 5;\n\n/**\n * If the user stops dragging for this duration with keeping the pointer down, updates the base coord and time.\n *\n * @since 3.0.0\n */\nexport const SAMPLING_INTERVAL = 50;\n\n/**\n * Start events for dragging.\n *\n * @since 3.0.0\n */\nexport const POINTER_DOWN_EVENTS = 'touchstart mousedown';\n\n/**\n * Update events for dragging.\n *\n * @since 3.0.0\n */\nexport const POINTER_MOVE_EVENTS = 'touchmove mousemove';\n\n/**\n * End events for dragging.\n *\n * @since 3.0.0\n */\nexport const POINTER_UP_EVENTS = 'touchend touchcancel mouseup mouseleave';\n","import { EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING } from '../../constants/events';\nimport { FADE, LOOP, SLIDE } from '../../constants/types';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { abs, clamp, min, prevent, sign } from '../../utils';\nimport { FRICTION, POINTER_DOWN_EVENTS, POINTER_MOVE_EVENTS, POINTER_UP_EVENTS, SAMPLING_INTERVAL } from './constants';\n\n\n/**\n * The interface for the Drag component.\n *\n * @since 3.0.0\n */\nexport interface DragComponent extends BaseComponent {\n}\n\n/**\n * The component for dragging the slider.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Drag component object.\n */\nexport function Drag( Splide: Splide, Components: Components, options: Options ): DragComponent {\n  const { emit, bind, unbind } = EventInterface( Splide );\n  const { track } = Components.Elements;\n  const { resolve, orient } = Components.Direction;\n  const { listSize } = Components.Layout;\n  const { go, getEnd } = Components.Controller;\n  const { Move, Scroll } = Components;\n  const { translate, toIndex, getPosition, isExceeded } = Move;\n  const isSlide = Splide.is( SLIDE );\n  const isFade  = Splide.is( FADE );\n  const isFree  = options.drag === 'free';\n\n  /**\n   * The coord where a pointer becomes active.\n   */\n  let startCoord: number;\n\n  /**\n   * Keeps the last time when the component detects dragging.\n   */\n  let lastTime: number;\n\n  /**\n   * The base slider position where the diff of coords is applied.\n   */\n  let basePosition: number;\n\n  /**\n   * The base coord to calculate the diff of coords.\n   */\n  let baseCoord: number;\n\n  /**\n   * The base time when the base position and the base coord are saved.\n   */\n  let baseTime: number;\n\n  /**\n   * Keeps the last TouchEvent/MouseEvent object.\n   */\n  let lastEvent: TouchEvent | MouseEvent;\n\n  /**\n   * Indicates whether the user is dragging the slider or not.\n   */\n  let moving: boolean;\n\n  /**\n   * Indicates whether the user drags the slider by the mouse or not.\n   */\n  let isMouse: boolean;\n\n  /**\n   * The target element to attach listeners.\n   */\n  let target: Window | HTMLElement;\n\n  /**\n   * Indicates whether the slider exceeds borders or not.\n   */\n  let exceeded: boolean;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    if ( options.drag ) {\n      bind( track, POINTER_DOWN_EVENTS, onPointerDown );\n    }\n  }\n\n  /**\n   * Called when the user clicks or touches the slider.\n   *\n   * @param e - A TouchEvent or MouseEvent object\n   */\n  function onPointerDown( e: TouchEvent | MouseEvent ): void {\n    isMouse = e.type === 'mousedown';\n    target  = isMouse ? window : track;\n\n    if ( ! ( isMouse && ( e as MouseEvent ).button ) ) {\n      if ( ! Move.isBusy() ) {\n        bind( target, POINTER_MOVE_EVENTS, onPointerMove );\n        bind( target, POINTER_UP_EVENTS, onPointerUp );\n        Move.cancel();\n        Scroll.cancel();\n        startCoord = getCoord( e );\n      } else {\n        prevent( e );\n      }\n    }\n  }\n\n  /**\n   * Called while the user moves the pointer on the slider.\n   *\n   * @param e - A TouchEvent or MouseEvent object\n   */\n  function onPointerMove( e: TouchEvent | MouseEvent ): void {\n    if ( e.cancelable ) {\n      const min = options.dragMinThreshold || 15;\n\n      if ( isMouse || abs( getCoord( e ) - startCoord ) > min ) {\n        moving = true;\n        onDrag();\n      }\n\n      if ( moving ) {\n        onDragging( e );\n        prevent( e, true );\n      }\n    } else {\n      onPointerUp( e );\n    }\n  }\n\n  /**\n   * Called when the user releases pointing devices.\n   * Be aware that the TouchEvent object provided by the `touchend` does not contain `Touch` objects,\n   * which means the last touch position is not available.\n   *\n   * @param e - A TouchEvent or MouseEvent object\n   */\n  function onPointerUp( e: TouchEvent | MouseEvent ): void {\n    unbind( target, `${ POINTER_MOVE_EVENTS } ${ POINTER_UP_EVENTS }` );\n    moving = false;\n\n    if ( lastEvent ) {\n      onDragged( e );\n      lastEvent = null;\n    }\n  }\n\n  /**\n   * Called when the user starts dragging the slider.\n   */\n  function onDrag(): void {\n    bind( track, 'click', e => {\n      unbind( track, 'click' );\n      prevent( e, true );\n    }, { capture: true } );\n\n    emit( EVENT_DRAG );\n  }\n\n  /**\n   * Called while the user is dragging the slider.\n   *\n   * @param e - A TouchEvent or MouseEvent object\n   */\n  function onDragging( e: TouchEvent | MouseEvent ): void {\n    const { timeStamp } = e;\n    const expired = ! lastTime || ( timeStamp - lastTime > SAMPLING_INTERVAL );\n\n    if ( expired || isExceeded() !== exceeded ) {\n      basePosition = getPosition();\n      baseCoord    = getCoord( e );\n      baseTime     = timeStamp;\n    }\n\n    exceeded  = isExceeded();\n    lastTime  = timeStamp;\n    lastEvent = e;\n\n    if ( ! isFade ) {\n      translate( basePosition + constrain( getCoord( e ) - baseCoord ) );\n    }\n\n    emit( EVENT_DRAGGING );\n  }\n\n  /**\n   * Called when the user finishes dragging.\n   *\n   * @param e - A TouchEvent or MouseEvent object\n   */\n  function onDragged( e: TouchEvent | MouseEvent ): void {\n    const velocity = computeVelocity( e );\n\n    if ( isFade ) {\n      go( Splide.index + orient( sign( velocity ) ) );\n    } else {\n      const destination = computeDestination( velocity );\n\n      if ( isFree ) {\n        Scroll.scroll( destination );\n      } else {\n        go( computeIndex( destination ), true );\n      }\n    }\n\n    lastTime = 0;\n    emit( EVENT_DRAGGED );\n  }\n\n  /**\n   * Computes the drag velocity.\n   *\n   * @param e - A TouchEvent or MouseEvent object\n   *\n   * @return The drag velocity.\n   */\n  function computeVelocity( e: TouchEvent | MouseEvent ): number {\n    if ( Splide.is( LOOP ) || ! isExceeded() ) {\n      const diffCoord = getCoord( lastEvent ) - baseCoord;\n      const diffTime  = lastEvent.timeStamp - baseTime;\n      const isFlick   = e.timeStamp - lastTime < SAMPLING_INTERVAL;\n\n      if ( diffTime && isFlick ) {\n        return diffCoord / diffTime;\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * Computes the destination by the velocity and the `flickPower` option.\n   *\n   * @param velocity - The drag velocity.\n   *\n   * @return The destination.\n   */\n  function computeDestination( velocity: number ): number {\n    const flickPower = options.flickPower || 600;\n\n    return getPosition() + sign( velocity ) * min(\n      abs( velocity ) * flickPower,\n      isFree ? Infinity : listSize() * ( options.flickMaxPages || 1 )\n    );\n  }\n\n  /**\n   * Converts the destination to the slide index.\n   *\n   * @param destination - The target destination.\n   *\n   * @return The destination index.\n   */\n  function computeIndex( destination: number ): number {\n    const dest = toIndex( destination );\n    return isSlide ? clamp( dest, 0, getEnd() ) : dest;\n  }\n\n  /**\n   * Returns the `pageX` and `pageY` coordinates provided by the event.\n   * Be aware that IE does not support both TouchEvent and MouseEvent constructors.\n   *\n   * @param e - A TouchEvent or MouseEvent object.\n   *\n   * @return A pageX or pageY coordinate.\n   */\n  function getCoord( e: TouchEvent | MouseEvent ): number {\n    return ( isMouse ? e : ( e as TouchEvent ).touches[ 0 ] )[ resolve( 'pageX' ) ];\n  }\n\n  /**\n   * Reduces the distance to move by the predefined friction.\n   * This does nothing when the slider type is not `slide`, or the position is inside borders.\n   *\n   * @param diff - Diff to constrain.\n   *\n   * @return The constrained diff.\n   */\n  function constrain( diff: number ): number {\n    return diff / ( exceeded && isSlide ? FRICTION : 1 );\n  }\n\n  return {\n    mount,\n  };\n}\n","import { TAB_INDEX } from '../../constants/attributes';\nimport { EVENT_UPDATED } from '../../constants/events';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { includes, isHTMLElement, removeAttribute, setAttribute } from '../../utils';\n\n\n/**\n * The interface for the Keyboard component.\n *\n * @since 3.0.0\n */\nexport interface KeyboardComponent extends BaseComponent {\n}\n\n/**\n * The collection of arrow keys of IE.\n *\n * @since 3.0.0\n */\nconst IE_ARROW_KEYS = [ 'Left', 'Right', 'Up', 'Down' ];\n\n/**\n * The component for controlling the slider by keyboards.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Keyboard component object.\n */\nexport function Keyboard( Splide: Splide, Components: Components, options: Options ): KeyboardComponent {\n  const { on, bind, unbind } = EventInterface( Splide );\n  const { root } = Components.Elements;\n  const { resolve } = Components.Direction;\n\n  /**\n   * The target element of the keyboard event.\n   */\n  let target: Window | HTMLElement;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    init();\n\n    on( EVENT_UPDATED, () => {\n      destroy();\n      init();\n    } );\n  }\n\n  /**\n   * Initializes the component.\n   */\n  function init(): void {\n    const { keyboard = 'global' } = options;\n\n    if ( keyboard ) {\n      if ( keyboard === 'focused' ) {\n        target = root;\n        setAttribute( root, TAB_INDEX, 0 );\n      } else {\n        target = window;\n      }\n\n      bind( target, 'keydown', e => {\n        const key = normalize( e.key );\n\n        if ( key === resolve( 'ArrowLeft' ) ) {\n          Splide.go( '<' );\n        } else if ( key === resolve( 'ArrowRight' ) ) {\n          Splide.go( '>' );\n        }\n      } );\n    }\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy() {\n    if ( target ) {\n      unbind( target, 'keydown' );\n\n      if ( isHTMLElement( target ) ) {\n        removeAttribute( target, TAB_INDEX );\n      }\n    }\n  }\n\n  /**\n   * Absorbs the difference of key names among browsers.\n   *\n   * @param key - A key to normalize.\n   *\n   * @return A normalized key.\n   */\n  function normalize( key: string ): string {\n    return includes( IE_ARROW_KEYS, key ) ? `Arrow${ key }` : key;\n  }\n\n  return {\n    mount,\n    destroy,\n  };\n}\n","import { DATA_ATTRIBUTE } from '../../constants/project';\n\n\n/**\n * The data attribute for the src value.\n *\n * @since 3.0.0\n */\nexport const SRC_DATA_ATTRIBUTE = `${ DATA_ATTRIBUTE }-lazy`;\n\n/**\n * The data attribute for the srcset value.\n *\n * @since 3.0.0\n */\nexport const SRCSET_DATA_ATTRIBUTE = `${ SRC_DATA_ATTRIBUTE }-srcset`;\n\n/**\n * The selector string for images to load.\n *\n * @since 3.0.0\n */\nexport const IMAGE_SELECTOR = `[${ SRC_DATA_ATTRIBUTE }], [${ SRCSET_DATA_ATTRIBUTE }]`;\n","import { ROLE } from '../../constants/attributes';\nimport { CLASS_LOADING } from '../../constants/classes';\nimport {\n  EVENT_LAZYLOAD_LOADED,\n  EVENT_MOUNTED,\n  EVENT_MOVED,\n  EVENT_REFRESH,\n  EVENT_RESIZE,\n} from '../../constants/events';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport {\n  addClass,\n  create,\n  display,\n  getAttribute,\n  queryAll,\n  remove,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n} from '../../utils';\nimport { SlideComponent } from '../Slides/Slide';\nimport { IMAGE_SELECTOR, SRC_DATA_ATTRIBUTE, SRCSET_DATA_ATTRIBUTE } from './constants';\n\n\n/**\n * The interface for the LazyLoad component.\n *\n * @since 3.0.0\n */\nexport interface LazyLoadComponent extends BaseComponent {\n}\n\n/**\n * The interface for all components.\n *\n * @since 3.0.0\n */\nexport interface LazyLoadImagesData {\n  img: HTMLImageElement;\n  spinner: HTMLSpanElement;\n  Slide: SlideComponent;\n  src: string | null;\n  srcset: string | null;\n}\n\n/**\n * The component for lazily loading images.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return An LazyLoad component object.\n */\nexport function LazyLoad( Splide: Splide, Components: Components, options: Options ): LazyLoadComponent {\n  const { on, off, bind, emit } = EventInterface( Splide );\n  const isSequential = options.lazyLoad === 'sequential';\n\n  /**\n   * Stores data of images.\n   */\n  let images: LazyLoadImagesData[] = [];\n\n  /**\n   * The current index of images.\n   */\n  let index = 0;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    if ( options.lazyLoad ) {\n      on( [ EVENT_MOUNTED, EVENT_REFRESH ], () => {\n        destroy();\n        init();\n      } );\n\n      if ( ! isSequential ) {\n        on( [ EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED ], observe );\n      }\n    }\n  }\n\n  /**\n   * Finds images that contain specific data attributes.\n   */\n  function init() {\n    Components.Slides.forEach( Slide => {\n      queryAll<HTMLImageElement>( Slide.slide, IMAGE_SELECTOR ).forEach( img => {\n        const src    = getAttribute( img, SRC_DATA_ATTRIBUTE );\n        const srcset = getAttribute( img, SRCSET_DATA_ATTRIBUTE );\n\n        if ( src !== img.src || srcset !== img.srcset ) {\n          const spinner = create( 'span', options.classes.spinner, img.parentElement );\n          setAttribute( spinner, ROLE, 'presentation' );\n          images.push( { img, Slide, src, srcset, spinner } );\n          display( img, 'none' );\n        }\n      } );\n    } );\n\n    if ( isSequential ) {\n      loadNext();\n    }\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy() {\n    index  = 0;\n    images = [];\n  }\n\n  /**\n   * Checks how close each image is from the active slide, and determines whether to start loading or not.\n   * The last `+1` is for the current page.\n   */\n  function observe(): void {\n    images = images.filter( data => {\n      if ( data.Slide.isWithin( Splide.index, options.perPage * ( ( options.preloadPages || 1 ) + 1 ) ) ) {\n        return load( data );\n      }\n\n      return true;\n    } );\n\n    if ( ! images.length ) {\n      off( EVENT_MOVED );\n    }\n  }\n\n  /**\n   * Starts loading the image in the data.\n   *\n   * @param data - A LazyLoadImagesData object.\n   */\n  function load( data: LazyLoadImagesData ): void {\n    const { img } = data;\n\n    addClass( data.Slide.slide, CLASS_LOADING );\n    bind( img, 'load error', e => { onLoad( data, e.type === 'error' ) } );\n\n    [ 'src', 'srcset' ].forEach( name => {\n      if ( data[ name ] ) {\n        setAttribute( img, name, data[ name ] );\n        removeAttribute( img, name === 'src' ? SRC_DATA_ATTRIBUTE : SRCSET_DATA_ATTRIBUTE );\n      }\n    } );\n  }\n\n  /**\n   * Called when the image is loaded or any error occurs.\n   *\n   * @param data  - A LazyLoadImagesData object.\n   * @param error - `true` if this method is called on error.\n   */\n  function onLoad( data: LazyLoadImagesData, error: boolean ): void {\n    const { Slide } = data;\n\n    removeClass( Slide.slide, CLASS_LOADING );\n\n    if ( ! error ) {\n      remove( data.spinner );\n      display( data.img, '' );\n      emit( EVENT_LAZYLOAD_LOADED, data.img, Slide );\n      emit( EVENT_RESIZE );\n    }\n\n    if ( isSequential ) {\n      loadNext();\n    }\n  }\n\n  /**\n   * Starts loading a next image.\n   */\n  function loadNext(): void {\n    if ( index < images.length ) {\n      load( images[ index++ ] );\n    }\n  }\n\n  return {\n    mount,\n    destroy,\n  };\n}\n","import { ARIA_CONTROLS, ARIA_CURRENT, ARIA_LABEL } from '../../constants/attributes';\nimport { CLASS_ACTIVE } from '../../constants/classes';\nimport {\n  EVENT_MOVE, EVENT_PAGINATION_MOUNTED,\n  EVENT_PAGINATION_PAGE, EVENT_PAGINATION_UPDATED,\n  EVENT_REFRESH,\n  EVENT_SCROLLED,\n  EVENT_UPDATED,\n} from '../../constants/events';\nimport { Splide } from '../../core/Splide/Splide';\nimport { EventInterface } from '../../constructors';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { addClass, ceil, create, empty, remove, removeAttribute, removeClass, setAttribute } from '../../utils';\nimport { format } from '../../utils/string';\n\n\n/**\n * The interface for the Pagination component.\n *\n * @since 3.0.0\n */\nexport interface PaginationComponent extends BaseComponent {\n  items: PaginationItem[];\n  getAt( index: number ): PaginationItem;\n}\n\n/**\n * The interface for each pagination item.\n *\n * @since 3.0.0\n */\nexport interface PaginationItem {\n  li: HTMLLIElement;\n  button: HTMLButtonElement;\n  page: number;\n}\n\n/**\n * The component for handling previous and next arrows.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Arrows component object.\n */\nexport function Pagination( Splide: Splide, Components: Components, options: Options ): PaginationComponent {\n  const { on, emit, bind, unbind } = EventInterface( Splide );\n  const { Slides } = Components;\n  const { go, toPage, hasFocus, getIndex } = Components.Controller;\n\n  /**\n   * Stores all pagination items.\n   */\n  const items: PaginationItem[] = [];\n\n  /**\n   * The pagination element.\n   */\n  let list: HTMLUListElement;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    init();\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], init );\n    on( [ EVENT_MOVE, EVENT_SCROLLED ], update );\n  }\n\n  /**\n   * Initializes the pagination.\n   */\n  function init(): void {\n    destroy();\n\n    if ( options.pagination && Slides.isEnough() ) {\n      createPagination();\n      emit( EVENT_PAGINATION_MOUNTED, { list, items }, getAt( Splide.index ) );\n      update();\n    }\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    if ( list ) {\n      remove( list );\n      items.forEach( item => { unbind( item.button, 'click' ) } );\n      empty( items );\n      list = null;\n    }\n  }\n\n  /**\n   * Creates the pagination element and appends it to the slider.\n   */\n  function createPagination(): void {\n    const { length } = Splide;\n    const { classes, i18n, perPage } = options;\n    const { slider, root } = Components.Elements;\n    const parent = options.pagination === 'slider' && slider ? slider : root;\n    const max    = hasFocus() ? length : ceil( length / perPage );\n\n    list = create( 'ul', classes.pagination, parent );\n\n    for ( let i = 0; i < max; i++ ) {\n      const li       = create( 'li', null, list );\n      const button   = create( 'button', { class: classes.page, type: 'button' }, li );\n      const controls = Slides.getIn( i ).map( Slide => Slide.slide.id );\n      const text     = ! hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n\n      bind( button, 'click', () => { go( `>${ i }` ) } );\n\n      setAttribute( button, ARIA_CONTROLS, controls.join( ' ' ) );\n      setAttribute( button, ARIA_LABEL, format( text, i + 1 ) );\n\n      emit( EVENT_PAGINATION_PAGE, list, li, button, i );\n\n      items.push( { li, button, page: i } );\n    }\n  }\n\n  /**\n   * Returns the pagination item at the specified index.\n   *\n   * @param index - An index.\n   *\n   * @return A pagination item object if available, or otherwise `undefined`.\n   */\n  function getAt( index: number ): PaginationItem | undefined {\n    return items[ toPage( index ) ];\n  }\n\n  /**\n   * Updates the pagination status.\n   */\n  function update(): void {\n    const prev = getAt( getIndex( true ) );\n    const curr = getAt( getIndex() );\n\n    if ( prev ) {\n      removeClass( prev.button, CLASS_ACTIVE );\n      removeAttribute( prev.button, ARIA_CURRENT );\n    }\n\n    if ( curr ) {\n      addClass( curr.button, CLASS_ACTIVE );\n      setAttribute( curr.button, ARIA_CURRENT, true );\n    }\n\n    emit( EVENT_PAGINATION_UPDATED, { list, items }, prev, curr );\n  }\n\n  return {\n    items,\n    mount,\n    destroy,\n    getAt,\n  };\n}\n","import { EVENT_CLICK, EVENT_MOVE, EVENT_NAVIGATION_MOUNTED, EVENT_SLIDE_KEYDOWN } from '../../constants/events';\nimport { LOOP } from '../../constants/types';\nimport { Splide } from '../../core/Splide/Splide';\nimport { EventInterface } from '../../constructors';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { empty, includes, prevent } from '../../utils';\n\n\n/**\n * The interface for the Sync component.\n *\n * @since 3.0.0\n */\nexport interface SyncComponent extends BaseComponent {\n}\n\n/**\n * The keys for triggering the navigation slide.\n *\n * @since 3.0.0\n */\nconst TRIGGER_KEYS = [ ' ', 'Enter', 'Spacebar' ];\n\n/**\n * The component for syncing multiple sliders.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Sync component object.\n */\nexport function Sync( Splide: Splide, Components: Components, options: Options ): SyncComponent {\n  const { splides } = Splide;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    if ( options.isNavigation ) {\n      navigate();\n    } else {\n      sync();\n    }\n  }\n\n  /**\n   * Syncs the current index among all slides.\n   * The `processed` array prevents recursive call of handlers.\n   */\n  function sync(): void {\n    const processed: Splide[] = [];\n\n    splides.concat( Splide ).forEach( ( splide, index, instances ) => {\n      EventInterface( splide ).on( EVENT_MOVE, ( index, prev, dest ) => {\n        instances.forEach( instance => {\n          if ( instance !== splide && ! includes( processed, splide ) ) {\n            processed.push( instance );\n            instance.go( instance.is( LOOP ) ? dest : index );\n          }\n        } );\n\n        empty( processed );\n      } );\n    } );\n  }\n\n  /**\n   * Makes slides clickable and moves the slider to the index of clicked slide.\n   */\n  function navigate(): void {\n    const { on, emit } = EventInterface( Splide );\n\n    on( EVENT_CLICK, Slide => {\n      Splide.go( Slide.index );\n    } );\n\n    on( EVENT_SLIDE_KEYDOWN, ( Slide, e: KeyboardEvent ) => {\n      if ( includes( TRIGGER_KEYS, e.key ) ) {\n        Splide.go( Slide.index );\n        prevent( e );\n      }\n    } );\n\n    emit( EVENT_NAVIGATION_MOUNTED, Splide.splides );\n  }\n\n  return {\n    mount,\n  };\n}\n","import { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { prevent } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Wheel component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface WheelComponent extends BaseComponent {\r\n}\r\n\r\n/**\r\n * The component for observing the mouse wheel and moving the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Wheel component object.\r\n */\r\nexport function Wheel( Splide: Splide, Components: Components, options: Options ): WheelComponent {\r\n  const { bind } = EventInterface( Splide );\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    if ( options.wheel ) {\r\n      bind( Components.Elements.track, 'wheel', onWheel );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the user rotates the mouse wheel.\r\n   *\r\n   * @param e - A WheelEvent object.\r\n   */\r\n  function onWheel( e: WheelEvent ): void {\r\n    const { deltaY } = e;\r\n\r\n    if ( deltaY ) {\r\n      Splide.go( deltaY < 0 ? '<' : '>' );\r\n      prevent( e );\r\n    }\r\n  }\r\n\r\n  return {\r\n    mount,\r\n  };\r\n}\r\n","/**\n * The collection of i18n strings.\n *\n * @since 3.0.0\n */\nexport const I18N = {\n  prev  : 'Previous slide',\n  next  : 'Next slide',\n  first : 'Go to first slide',\n  last  : 'Go to last slide',\n  slideX: 'Go to slide %s',\n  pageX : 'Go to page %s',\n  play  : 'Start autoplay',\n  pause : 'Pause autoplay',\n};\n","import { Options } from '../types';\nimport { CLASSES } from './classes';\nimport { I18N } from './i18n';\n\n\n/**\n * The collection of default options.\n * Note that this collection does not contain all options.\n *\n * @since 3.0.0\n */\nexport const DEFAULTS: Options = {\n  type             : 'slide',\n  speed            : 400,\n  waitForTransition: true,\n  perPage          : 1,\n  arrows           : true,\n  pagination       : true,\n  interval         : 5000,\n  pauseOnHover     : true,\n  pauseOnFocus     : true,\n  resetProgress    : true,\n  easing           : 'cubic-bezier(.42,.65,.27,.99)',\n  drag             : true,\n  direction        : 'ltr',\n  slideFocus       : true,\n  trimSpace        : true,\n  classes          : CLASSES,\n  i18n             : I18N,\n};\n","import { EVENT_MOUNTED, EVENT_REFRESH } from '../../constants/events';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { Components, Options, TransitionComponent } from '../../types';\nimport { nextTick, noop, rect, unit } from '../../utils';\n\n\n/**\n * The component for the fade transition.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Transition component object.\n */\nexport function Fade( Splide: Splide, Components: Components, options: Options ): TransitionComponent {\n  const { on } = EventInterface( Splide );\n  const { ruleBy } = Components.Style;\n\n  /**\n   * Called when the component is mounted.\n   * The nextTick disables the initial fade transition of the first slide.\n   */\n  function mount(): void {\n    on( [ EVENT_MOUNTED, EVENT_REFRESH ], () => {\n      nextTick( () => {\n        Components.Slides.forEach( Slide => {\n          ruleBy( Slide.slide, 'transition', `opacity ${ options.speed }ms ${ options.easing }` );\n        } );\n      } );\n    } );\n  }\n\n  /**\n   * Starts the transition.\n   * Explicitly sets the track height to avoid it will collapse in Safari.\n   *\n   * @param index - A destination index.\n   * @param done  - The callback function that must be called after the transition ends.\n   */\n  function start( index: number, done: () => void ): void {\n    const { track } = Components.Elements;\n    ruleBy( track, 'height', unit( rect( track ).height ) );\n\n    nextTick( () => {\n      done();\n      ruleBy( track, 'height', '' );\n    } );\n  }\n\n  return {\n    mount,\n    start,\n    cancel: noop,\n  };\n}\n","import { SLIDE } from '../../constants/types';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { Components, Options, TransitionComponent } from '../../types';\nimport { abs } from '../../utils';\n\n\n/**\n * The component for the slide transition.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Transition component object.\n */\nexport function Slide( Splide: Splide, Components: Components, options: Options ): TransitionComponent {\n  const { bind } = EventInterface( Splide );\n  const { Move, Controller } = Components;\n  const { list } = Components.Elements;\n\n  /**\n   * Holds the `done` callback function.\n   */\n  let endCallback: () => void;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    bind( list, 'transitionend', e => {\n      if ( e.target === list && endCallback ) {\n        cancel();\n        endCallback();\n      }\n    } );\n  }\n\n  /**\n   * Starts the transition.\n   * The Move component calls this method just before the slider moves.\n   *\n   * @param index - A destination index.\n   * @param done  - The callback function that must be called after the transition ends.\n   */\n  function start( index: number, done: () => void ): void {\n    const destination = Move.toPosition( index, true );\n    const position    = Move.getPosition();\n    const speed       = getSpeed( index );\n\n    if ( abs( destination - position ) >= 1 && speed >= 1 ) {\n      apply( `transform ${ speed }ms ${ options.easing }` );\n      Move.translate( destination );\n      endCallback = done;\n    } else {\n      Move.jump( index );\n      done();\n    }\n  }\n\n  /**\n   * Cancels the transition.\n   */\n  function cancel(): void {\n    apply( '' );\n  }\n\n  /**\n   * Returns the transition speed.\n   *\n   * @param index - A destination index.\n   */\n  function getSpeed( index: number ): number {\n    const { rewindSpeed } = options;\n\n    if ( Splide.is( SLIDE ) && rewindSpeed ) {\n      const prev = Controller.getIndex( true );\n      const end  = Controller.getEnd();\n\n      if ( ( prev === 0 && index >= end ) || ( prev >= end && index === 0 ) ) {\n        return rewindSpeed;\n      }\n    }\n\n    return options.speed;\n  }\n\n  /**\n   * Applies the transition CSS property to the list element.\n   *\n   * @param transition - A transition CSS value.\n   */\n  function apply( transition: string ): void {\n    Components.Style.ruleBy( list, 'transition', transition );\n  }\n\n  return {\n    mount,\n    start,\n    cancel,\n  };\n}\n","import * as ComponentConstructors from '../../components';\nimport { SlideMatcher } from '../../components/Slides/Slides';\nimport { CLASS_INITIALIZED } from '../../constants/classes';\nimport { DEFAULTS } from '../../constants/defaults';\nimport { EVENT_DESTROY, EVENT_MOUNTED, EVENT_READY, EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\nimport { CREATED, DESTROYED, IDLE, STATES } from '../../constants/states';\nimport { FADE } from '../../constants/types';\nimport { EventBus, EventBusCallback, EventBusObject, State, StateObject } from '../../constructors';\nimport { Fade, Slide } from '../../transitions';\nimport { ComponentConstructor, Components, Options } from '../../types';\nimport { addClass, assert, assign, empty, forOwn, isString, merge, query } from '../../utils';\n\n\n/**\n * The frontend class for the Splide slider.\n *\n * @since 3.0.0\n */\nexport class Splide {\n  /**\n   * Changes the default options for all Splide instances.\n   */\n  static defaults: Options = {};\n\n  /**\n   * The collection of state numbers.\n   */\n  static readonly STATES = STATES;\n\n  /**\n   * The root element where the Splide is applied.\n   */\n  readonly root: HTMLElement;\n\n  /**\n   * The EventBusObject object.\n   */\n  readonly event: EventBusObject = EventBus();\n\n  /**\n   * The collection of all component objects.\n   */\n  readonly Components: Components = {} as Components;\n\n  /**\n   * The StateObject object.\n   */\n  readonly state: StateObject = State( CREATED );\n\n  /**\n   * Splide instances to sync with.\n   */\n  readonly splides: Splide[] = [];\n\n  /**\n   * The collection of options.\n   */\n  private readonly opts: Options = {};\n\n  /**\n   * The collection of extensions.\n   */\n  private Extensions: Record<string, ComponentConstructor> = {};\n\n  /**\n   * The Transition component.\n   */\n  private Transition: ComponentConstructor;\n\n  /**\n   * The Splide constructor.\n   *\n   * @param target  - The selector for the target element, or the element itself.\n   * @param options - Optional. An object with options.\n   */\n  constructor( target: string | HTMLElement, options?: Options ) {\n    const root = isString( target ) ? query<HTMLElement>( document, target ) : target;\n    assert( root, `${ root } is invalid.` );\n\n    this.root = root;\n\n    merge( DEFAULTS, Splide.defaults );\n    merge( merge( this.opts, DEFAULTS ), options || {} );\n  }\n\n  /**\n   * Initializes the instance.\n   *\n   * @param Extensions - Optional. An object with extensions.\n   * @param Transition - Optional. A Transition component.\n   *\n   * @return `this`\n   */\n  mount( Extensions?: Record<string, ComponentConstructor>, Transition?: ComponentConstructor ): this {\n    this.state.set( CREATED );\n\n    this.Transition = Transition || this.Transition || ( this.is( FADE ) ? Fade : Slide );\n    this.Extensions = Extensions || this.Extensions;\n\n    const Constructors = assign( {}, ComponentConstructors, this.Extensions, { Transition: this.Transition } );\n    const { Components } = this;\n\n    forOwn( Constructors, ( Component, key ) => {\n      const component = Component( this, this.Components, this.opts );\n      Components[ key ] = component;\n      component.setup && component.setup();\n    } );\n\n    forOwn( Components, component => {\n      component.mount && component.mount();\n    } );\n\n    forOwn( Components, component => {\n      component.mounted && component.mounted();\n    } );\n\n    this.emit( EVENT_MOUNTED );\n\n    addClass( this.root, CLASS_INITIALIZED );\n\n    this.state.set( IDLE );\n    this.emit( EVENT_READY );\n\n    return this;\n  }\n\n  /**\n   * Syncs the slider with the provided one.\n   * This method must be called before the `mount()`.\n   *\n   * @example\n   * ```ts\n   * var primary   = new Splide();\n   * var secondary = new Splide();\n   *\n   * primary.sync( secondary );\n   * primary.mount();\n   * secondary.mount();\n   * ```\n   *\n   * @param splide - A Splide instance to sync with.\n   *\n   * @return `this`\n   */\n  sync( splide: Splide ): this {\n    this.splides.push( splide );\n    splide.splides.push( this );\n    return this;\n  }\n\n  /**\n   * Moves the slider with the following control pattern.\n   *\n   * | Pattern | Description |\n   * |---|---|\n   * | `i` | Goes to the slide `i` |\n   * | `'+${i}'` | Increments the slide index by `i` |\n   * | `'-${i}'` | Decrements the slide index by `i` |\n   * | `'>'` | Goes to the next page |\n   * | `'<'` | Goes to the previous page |\n   * | `>${i}` | Goes to the page `i` |\n   *\n   * In most cases, `'>'` and `'<'` notations are enough to control the slider\n   * because they respect `perPage` and `perMove` options.\n   *\n   * @example\n   * ```ts\n   * var splide = new Splide();\n   *\n   * // Goes to the slide 1:\n   * splide.go( 1 );\n   *\n   * // Increments the index:\n   * splide.go( '+2' );\n   *\n   * // Goes to the next page:\n   * splide.go( '>' );\n   *\n   * // Goes to the page 2:\n   * splide.go( '>2' );\n   * ```\n   *\n   * @param control\n   */\n  go( control: number | string ): void {\n    this.Components.Controller.go( control );\n  }\n\n  /**\n   * Registers an event handler.\n   *\n   * @example\n   * ```ts\n   * var splide = new Splide();\n   *\n   * // Listens to a single event:\n   * splide.on( 'move', function() {} );\n   *\n   * // Listens to multiple events:\n   * splide.on( 'move resize', function() {} );\n   *\n   * // Appends a namespace:\n   * splide.on( 'move.myNamespace resize.myNamespace', function() {} );\n   * ```\n   *\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to append a namespace.\n   * @param callback - A callback function.\n   *\n   * @return `this`\n   */\n  on( events: string, callback: EventBusCallback ): this {\n    this.event.on( events, callback );\n    return this;\n  }\n\n  /**\n   * Removes the registered all handlers for the specified event or events.\n   * If you want to only remove a particular handler, use namespace to identify it.\n   *\n   * @example\n   * ```ts\n   * var splide = new Splide();\n   *\n   * // Removes all handlers assigned to \"move\":\n   * splide.off( 'move' );\n   *\n   * // Only removes handlers that belong to the specified namespace:\n   * splide.off( 'move.myNamespace' );\n   * ```\n   *\n   * @param events - An event name or names separated by spaces. Use a dot(.) to append a namespace.\n   *\n   * @return `this`\n   */\n  off( events: string ): this {\n    this.event.off( events );\n    return this;\n  }\n\n  /**\n   * Emits an event and triggers registered handlers.\n   *\n   * @param event - An event name to emit.\n   * @param args  - Optional. Any number of arguments to pass to handlers.\n   *\n   * @return `this`\n   */\n  emit( event: string, ...args: any[] ): this {\n    this.event.emit( event, ...args );\n    return this;\n  }\n\n  /**\n   * Inserts a slide at the specified position.\n   *\n   * @example\n   * ```ts\n   * var splide = new Splide();\n   * splide.mount();\n   *\n   * // Adds the slide by the HTML:\n   * splide.add( '<li></li> );\n   *\n   * // or adds the element:\n   * splide.add( document.createElement( 'li' ) );\n   * ```\n   *\n   * @param slides - A slide element, an HTML string that represents a slide, or an array with them.\n   * @param index  - Optional. An index to insert a slide at.\n   *\n   * @return `this`\n   */\n  add( slides: string | HTMLElement | Array<string | HTMLElement>, index?: number ): this {\n    this.Components.Slides.add( slides, index );\n    return this;\n  }\n\n  /**\n   * Removes slides that match the matcher\n   * that can be an index, an array with indices, a selector, or an iteratee function.\n   *\n   * @param matcher - An index, an array with indices, a selector string, or an iteratee function.\n   */\n  remove( matcher: SlideMatcher ): this {\n    this.Components.Slides.remove( matcher );\n    return this;\n  }\n\n  /**\n   * Checks the slider type.\n   *\n   * @param type - A type to test.\n   *\n   * @return `true` if the type matches the current one, or otherwise `false`.\n   */\n  is( type: string ): boolean {\n    return this.opts.type === type;\n  }\n\n  /**\n   * Refreshes the slider.\n   *\n   * @return `this`\n   */\n  refresh(): this {\n    this.emit( EVENT_REFRESH );\n    return this;\n  }\n\n  /**\n   * Destroys the slider.\n   *\n   * @param completely - Optional. If `true`, Splide will not remount the slider by breakpoints.\n   *\n   * @return `this`\n   */\n  destroy( completely?: boolean ): this {\n    const { event, state } = this;\n\n    if ( state.is( CREATED ) ) {\n      // Postpones destruction requested before the slider becomes ready.\n      event.on( EVENT_READY, this.destroy.bind( this, completely ), this );\n    } else {\n      forOwn( this.Components, component => {\n        component.destroy && component.destroy( completely );\n      } );\n\n      event.emit( EVENT_DESTROY );\n      event.destroy();\n      empty( this.splides );\n      state.set( DESTROYED );\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns options.\n   *\n   * @return An object with the latest options.\n   */\n  get options(): Options {\n    return this.opts;\n  }\n\n  /**\n   * Merges options to the current options and emits `updated` event.\n   *\n   * @param options - An object with new options.\n   */\n  set options( options: Options ) {\n    const { opts } = this;\n    merge( opts, options );\n\n    if ( ! this.state.is( CREATED ) ) {\n      this.emit( EVENT_UPDATED, opts );\n    }\n  }\n\n  /**\n   * Returns the number of slides without clones.\n   *\n   * @return The number of slides.\n   */\n  get length(): number {\n    return this.Components.Slides.getLength( true );\n  }\n\n  /**\n   * Returns the active slide index.\n   *\n   * @return The active slide index.\n   */\n  get index(): number {\n    return this.Components.Controller.getIndex();\n  }\n}\n\n"],"names":["PROJECT_CODE","DATA_ATTRIBUTE","CREATED","MOUNTED","IDLE","MOVING","DESTROYED","STATES","empty","array","length","isObject","subject","isNull","isArray","Array","isFunction","isString","isUndefined","isHTMLElement","HTMLElement","isHTMLButtonElement","HTMLButtonElement","toArray","value","forEach","values","iteratee","includes","indexOf","push","items","arrayProto","prototype","slice","arrayLike","start","end","call","find","predicate","filter","toggleClass","elm","classes","add","name","classList","addClass","append","parent","children","appendChild","bind","before","nodes","ref","node","parentNode","insertBefore","matches","selector","child","firstElementChild","forOwn","object","keys","Object","i","key","assign","sources","source","merge","removeAttribute","attrs","attr","setAttribute","String","create","tag","document","createElement","style","elms","styles","getComputedStyle","display","getAttribute","hasClass","className","contains","parseHtml","html","DOMParser","parseFromString","body","prevent","e","stopPropagation","preventDefault","stopImmediatePropagation","query","querySelector","queryAll","querySelectorAll","rect","target","getBoundingClientRect","remove","removeChild","removeClass","unit","assert","condition","message","Error","nextTick","callback","setTimeout","noop","raf","func","requestAnimationFrame","between","number","minOrMax","maxOrMin","exclusive","min","Math","max","clamp","x","y","minimum","maximum","sign","floor","ceil","abs","round","Options","Splide","Components","options","initialOptions","points","currPoint","setup","JSON","parse","mount","breakpoints","sort","n","m","map","point","matchMedia","addEventListener","observe","destroy","completely","removeEventListener","item","onMatch","newOptions","RTL","TTB","ORIENTATION_MAP","marginRight","width","autoWidth","fixedWidth","paddingLeft","paddingRight","left","right","X","pageX","ArrowLeft","ArrowRight","Direction","resolve","prop","axisOnly","direction","index","orient","CLASS_ROOT","CLASS_SLIDER","CLASS_TRACK","CLASS_LIST","CLASS_SLIDE","CLASS_CLONE","CLASS_CONTAINER","CLASS_ARROWS","CLASS_ARROW","CLASS_ARROW_PREV","CLASS_ARROW_NEXT","CLASS_PAGINATION","CLASS_PAGINATION_PAGE","CLASS_PROGRESS","CLASS_PROGRESS_BAR","CLASS_AUTOPLAY","CLASS_PLAY","CLASS_PAUSE","CLASS_SPINNER","CLASS_INITIALIZED","CLASS_ACTIVE","CLASS_PREV","CLASS_NEXT","CLASS_VISIBLE","CLASS_LOADING","STATUS_CLASSES","CLASSES","slide","clone","arrows","arrow","prev","next","pagination","page","spinner","EVENT_MOUNTED","EVENT_READY","EVENT_MOVE","EVENT_MOVED","EVENT_CLICK","EVENT_ACTIVE","EVENT_INACTIVE","EVENT_VISIBLE","EVENT_HIDDEN","EVENT_SLIDE_KEYDOWN","EVENT_REFRESH","EVENT_UPDATED","EVENT_RESIZE","EVENT_RESIZED","EVENT_DRAG","EVENT_DRAGGING","EVENT_DRAGGED","EVENT_SCROLL","EVENT_SCROLLED","EVENT_DESTROY","EVENT_ARROWS_MOUNTED","EVENT_ARROWS_UPDATED","EVENT_PAGINATION_MOUNTED","EVENT_PAGINATION_PAGE","EVENT_PAGINATION_UPDATED","EVENT_NAVIGATION_MOUNTED","EVENT_AUTOPLAY_PLAY","EVENT_AUTOPLAY_PLAYING","EVENT_AUTOPLAY_PAUSE","EVENT_LAZYLOAD_LOADED","EventBus","handlers","on","events","priority","forEachEvent","event","namespace","handler1","handler2","off","eventHandlers","handler","offBy","emit","apply","arguments","join","split","eventNS","fragments","EventInterface","listeners","targets","unbind","listener","data","RequestInterval","interval","onInterval","onUpdate","limit","now","Date","startTime","rate","id","paused","count","update","elapsed","pause","resume","cancel","rewind","cancelAnimationFrame","isPaused","State","initialState","state","set","is","states","Throttle","duration","throttled","format","string","replacements","replacement","replace","pad","ids","uniqueId","prefix","Elements","root","elements","slides","slider","track","list","collect","identify","getClasses","refresh","autoplay","bar","play","Style","sheet","head","rule","cssRules","cssRule","isCSSStyleRule","selectorText","insertRule","ruleBy","CSSStyleRule","ROLE","ARIA_CONTROLS","ARIA_CURRENT","ARIA_LABEL","ARIA_HIDDEN","TAB_INDEX","DISABLED","ALL_ATTRIBUTES","SLIDE","LOOP","FADE","Slide","slideIndex","destroyEvents","isNavigation","updateOnMove","isClone","container","init","type","onMove","dest","updateActivity","idx","label","slideX","controls","splide","Controller","currIndex","isActive","updateVisibility","isVisible","active","visible","useContainer","trackRect","slideRect","isWithin","from","distance","diff","Slides","register","get","excludeClones","getIn","getAt","forEachItem","observeImages","matcher","removeNode","images","img","getLength","isEnough","Clones","clones","cloneCount","cloneIndex","computeCloneCount","generate","concat","isHead","cloneDeep","cloneNode","fixedSize","fixedCount","baseCount","Layout","vertical","window","resize","cssPadding","cssSlideWidth","setSlidesHeight","cssTrackHeight","cssSlideHeight","padding","height","cssHeight","paddingTop","paddingBottom","cssSlideSize","gap","listSize","slideSize","withoutGap","getGap","totalSize","sliderSize","firstSlide","lastSlide","parseFloat","getPadding","Move","looping","waiting","currPosition","positionRate","reposition","jump","translate","isExceededMax","getLimit","move","isBusy","position","getPosition","Transition","onMoved","oldPosition","toPosition","loop","exceededMin","isExceededMin","exceededMax","toIndex","minDistance","Infinity","trimming","offset","trim","focus","isExceeded","isLoop","prevIndex","slideCount","perMove","perPage","setIndex","go","control","allowSameIndex","match","indicator","computeDestIndex","getNext","getPrev","getEnd","destination","getAdjacent","getPerMove","incremental","toPage","hasFocus","getIndex","XML_NAME_SPACE","PATH","SIZE","Arrows","i18n","wrapper","created","createArrows","listen","createArrow","nextIndex","prevLabel","last","nextLabel","first","disabled","Autoplay","playButton","pauseButton","hovered","focused","initButton","forPause","button","autoToggle","manual","Cover","toggle","cover","src","BOUNCE_DIFF_THRESHOLD","BOUNCE_DURATION","FRICTION_FACTOR","BASE_VELOCITY","MIN_DURATION","Scroll","clear","scroll","suppressConstraint","friction","computeDuration","onScrolled","easing","bounce","backwards","t","easingFunc","pow","FRICTION","SAMPLING_INTERVAL","POINTER_DOWN_EVENTS","POINTER_MOVE_EVENTS","POINTER_UP_EVENTS","Drag","isSlide","isFade","isFree","startCoord","lastTime","basePosition","baseCoord","baseTime","lastEvent","moving","isMouse","exceeded","onPointerDown","onPointerMove","onPointerUp","getCoord","cancelable","onDrag","onDragging","onDragged","capture","timeStamp","expired","constrain","velocity","computeVelocity","computeDestination","computeIndex","diffCoord","diffTime","isFlick","flickPower","touches","IE_ARROW_KEYS","Keyboard","keyboard","normalize","SRC_DATA_ATTRIBUTE","SRCSET_DATA_ATTRIBUTE","IMAGE_SELECTOR","LazyLoad","isSequential","srcset","parentElement","loadNext","load","onLoad","error","Pagination","createPagination","li","class","text","curr","TRIGGER_KEYS","Sync","splides","navigate","sync","processed","instances","instance","Wheel","onWheel","deltaY","I18N","DEFAULTS","speed","waitForTransition","pauseOnHover","pauseOnFocus","resetProgress","drag","slideFocus","trimSpace","Fade","done","endCallback","getSpeed","rewindSpeed","transition","Extensions","Constructors","ComponentConstructors","Component","component","args","opts"],"mappings":"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"}